// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { GetApiV3PingData, GetApiV3PingResponse, GetApiV3TimeData, GetApiV3TimeResponse, GetApiV3ExchangeInfoData, GetApiV3ExchangeInfoResponse, GetApiV3ExchangeInfoError, GetApiV3DepthData, GetApiV3DepthResponse, GetApiV3DepthError, GetApiV3TradesData, GetApiV3TradesResponse, GetApiV3TradesError, GetApiV3HistoricalTradesData, GetApiV3HistoricalTradesResponse, GetApiV3AggTradesData, GetApiV3AggTradesResponse, GetApiV3AggTradesError, GetApiV3KlinesData, GetApiV3KlinesResponse, GetApiV3KlinesError, GetApiV3UiKlinesData, GetApiV3UiKlinesResponse, GetApiV3UiKlinesError, GetApiV3AvgPriceData, GetApiV3AvgPriceResponse, GetApiV3AvgPriceError, GetApiV3Ticker24HrData, GetApiV3Ticker24HrResponse, GetApiV3Ticker24HrError, GetApiV3TickerTradingDayData, GetApiV3TickerTradingDayResponse, GetApiV3TickerTradingDayError, GetApiV3TickerPriceData, GetApiV3TickerPriceResponse, GetApiV3TickerPriceError, GetApiV3TickerBookTickerData, GetApiV3TickerBookTickerResponse, GetApiV3TickerBookTickerError, GetApiV3TickerData, GetApiV3TickerResponse, GetApiV3TickerError, PostApiV3OrderTestData, PostApiV3OrderTestResponse, PostApiV3OrderTestError, DeleteApiV3OrderData, DeleteApiV3OrderResponse, DeleteApiV3OrderError, GetApiV3OrderData, GetApiV3OrderResponse, GetApiV3OrderError, PostApiV3OrderData, PostApiV3OrderResponse, PostApiV3OrderError, PostApiV3OrderCancelReplaceData, PostApiV3OrderCancelReplaceResponse, PostApiV3OrderCancelReplaceError, DeleteApiV3OpenOrdersData, DeleteApiV3OpenOrdersResponse, DeleteApiV3OpenOrdersError, GetApiV3OpenOrdersData, GetApiV3OpenOrdersResponse, GetApiV3OpenOrdersError, GetApiV3AllOrdersData, GetApiV3AllOrdersResponse, GetApiV3AllOrdersError, PostApiV3OrderListOcoData, PostApiV3OrderListOcoResponse, PostApiV3OrderListOcoError, PostApiV3OrderListOtoData, PostApiV3OrderListOtoResponse, PostApiV3OrderListOtoError, PostApiV3OrderListOtocoData, PostApiV3OrderListOtocoResponse, PostApiV3OrderListOtocoError, DeleteApiV3OrderListData, DeleteApiV3OrderListResponse, DeleteApiV3OrderListError, GetApiV3OrderListData, GetApiV3OrderListResponse, GetApiV3OrderListError, GetApiV3AllOrderListData, GetApiV3AllOrderListResponse, GetApiV3AllOrderListError, GetApiV3OpenOrderListData, GetApiV3OpenOrderListResponse, GetApiV3OpenOrderListError, PostApiV3SorOrderData, PostApiV3SorOrderResponse, PostApiV3SorOrderError, PostApiV3SorOrderTestData, PostApiV3SorOrderTestResponse, PostApiV3SorOrderTestError, GetApiV3AccountData, GetApiV3AccountResponse, GetApiV3AccountError, GetApiV3MyTradesData, GetApiV3MyTradesResponse, GetApiV3MyTradesError, GetApiV3RateLimitOrderData, GetApiV3RateLimitOrderResponse, GetApiV3RateLimitOrderError, GetApiV3MyPreventedMatchesData, GetApiV3MyPreventedMatchesResponse, GetApiV3MyPreventedMatchesError, GetApiV3MyAllocationsData, GetApiV3MyAllocationsResponse, GetApiV3MyAllocationsError, GetApiV3AccountCommissionData, GetApiV3AccountCommissionResponse, GetApiV3AccountCommissionError, GetSapiV1MarginBorrowRepayData, GetSapiV1MarginBorrowRepayResponse, GetSapiV1MarginBorrowRepayError, PostSapiV1MarginBorrowRepayData, PostSapiV1MarginBorrowRepayResponse, PostSapiV1MarginBorrowRepayError, GetSapiV1MarginTransferData, GetSapiV1MarginTransferResponse, GetSapiV1MarginTransferError, GetSapiV1MarginAllAssetsData, GetSapiV1MarginAllAssetsResponse, GetSapiV1MarginAllAssetsError, GetSapiV1MarginAllPairsData, GetSapiV1MarginAllPairsResponse, GetSapiV1MarginAllPairsError, GetSapiV1MarginPriceIndexData, GetSapiV1MarginPriceIndexResponse, GetSapiV1MarginPriceIndexError, DeleteSapiV1MarginOrderData, DeleteSapiV1MarginOrderResponse, DeleteSapiV1MarginOrderError, GetSapiV1MarginOrderData, GetSapiV1MarginOrderResponse, GetSapiV1MarginOrderError, PostSapiV1MarginOrderData, PostSapiV1MarginOrderResponse, PostSapiV1MarginOrderError, GetSapiV1MarginInterestHistoryData, GetSapiV1MarginInterestHistoryResponse, GetSapiV1MarginInterestHistoryError, GetSapiV1MarginForceLiquidationRecData, GetSapiV1MarginForceLiquidationRecResponse, GetSapiV1MarginForceLiquidationRecError, GetSapiV1MarginAccountData, GetSapiV1MarginAccountResponse, GetSapiV1MarginAccountError, DeleteSapiV1MarginOpenOrdersData, DeleteSapiV1MarginOpenOrdersResponse, DeleteSapiV1MarginOpenOrdersError, GetSapiV1MarginOpenOrdersData, GetSapiV1MarginOpenOrdersResponse, GetSapiV1MarginOpenOrdersError, GetSapiV1MarginAllOrdersData, GetSapiV1MarginAllOrdersResponse, GetSapiV1MarginAllOrdersError, PostSapiV1MarginOrderOcoData, PostSapiV1MarginOrderOcoResponse, PostSapiV1MarginOrderOcoError, DeleteSapiV1MarginOrderListData, DeleteSapiV1MarginOrderListResponse, DeleteSapiV1MarginOrderListError, GetSapiV1MarginOrderListData, GetSapiV1MarginOrderListResponse, GetSapiV1MarginOrderListError, GetSapiV1MarginAllOrderListData, GetSapiV1MarginAllOrderListResponse, GetSapiV1MarginAllOrderListError, GetSapiV1MarginOpenOrderListData, GetSapiV1MarginOpenOrderListResponse, GetSapiV1MarginOpenOrderListError, GetSapiV1MarginMyTradesData, GetSapiV1MarginMyTradesResponse, GetSapiV1MarginMyTradesError, GetSapiV1MarginMaxBorrowableData, GetSapiV1MarginMaxBorrowableResponse, GetSapiV1MarginMaxBorrowableError, GetSapiV1MarginMaxTransferableData, GetSapiV1MarginMaxTransferableResponse, GetSapiV1MarginMaxTransferableError, GetSapiV1MarginTradeCoeffData, GetSapiV1MarginTradeCoeffResponse, GetSapiV1MarginTradeCoeffError, DeleteSapiV1MarginIsolatedAccountData, DeleteSapiV1MarginIsolatedAccountResponse, DeleteSapiV1MarginIsolatedAccountError, GetSapiV1MarginIsolatedAccountData, GetSapiV1MarginIsolatedAccountResponse, GetSapiV1MarginIsolatedAccountError, PostSapiV1MarginIsolatedAccountData, PostSapiV1MarginIsolatedAccountResponse, PostSapiV1MarginIsolatedAccountError, GetSapiV1MarginIsolatedAccountLimitData, GetSapiV1MarginIsolatedAccountLimitResponse, GetSapiV1MarginIsolatedAccountLimitError, GetSapiV1MarginIsolatedAllPairsData, GetSapiV1MarginIsolatedAllPairsResponse, GetSapiV1MarginIsolatedAllPairsError, GetSapiV1BnbBurnData, GetSapiV1BnbBurnResponse, GetSapiV1BnbBurnError, PostSapiV1BnbBurnData, PostSapiV1BnbBurnResponse, PostSapiV1BnbBurnError, GetSapiV1MarginInterestRateHistoryData, GetSapiV1MarginInterestRateHistoryResponse, GetSapiV1MarginInterestRateHistoryError, GetSapiV1MarginCrossMarginDataData, GetSapiV1MarginCrossMarginDataResponse, GetSapiV1MarginCrossMarginDataError, GetSapiV1MarginIsolatedMarginDataData, GetSapiV1MarginIsolatedMarginDataResponse, GetSapiV1MarginIsolatedMarginDataError, GetSapiV1MarginIsolatedMarginTierData, GetSapiV1MarginIsolatedMarginTierResponse, GetSapiV1MarginIsolatedMarginTierError, GetSapiV1MarginRateLimitOrderData, GetSapiV1MarginRateLimitOrderResponse, GetSapiV1MarginRateLimitOrderError, GetSapiV1MarginCrossMarginCollateralRatioData, GetSapiV1MarginCrossMarginCollateralRatioResponse, GetSapiV1MarginCrossMarginCollateralRatioError, GetSapiV1MarginExchangeSmallLiabilityData, GetSapiV1MarginExchangeSmallLiabilityResponse, GetSapiV1MarginExchangeSmallLiabilityError, GetSapiV1MarginExchangeSmallLiabilityHistoryData, GetSapiV1MarginExchangeSmallLiabilityHistoryResponse, GetSapiV1MarginExchangeSmallLiabilityHistoryError, GetSapiV1MarginNextHourlyInterestRateData, GetSapiV1MarginNextHourlyInterestRateResponse, GetSapiV1MarginNextHourlyInterestRateError, GetSapiV1MarginCapitalFlowData, GetSapiV1MarginCapitalFlowResponse, GetSapiV1MarginCapitalFlowError, GetSapiV1MarginDelistScheduleData, GetSapiV1MarginDelistScheduleResponse, GetSapiV1MarginDelistScheduleError, GetSapiV1MarginAvailableInventoryData, GetSapiV1MarginAvailableInventoryResponse, GetSapiV1MarginAvailableInventoryError, PostSapiV1MarginManualLiquidationData, PostSapiV1MarginManualLiquidationResponse, PostSapiV1MarginManualLiquidationError, PostSapiV1MarginOrderOtoData, PostSapiV1MarginOrderOtoResponse, PostSapiV1MarginOrderOtoError, PostSapiV1MarginOrderOtocoData, PostSapiV1MarginOrderOtocoResponse, PostSapiV1MarginOrderOtocoError, PostSapiV1MarginMaxLeverageData, PostSapiV1MarginMaxLeverageResponse, PostSapiV1MarginMaxLeverageError, GetSapiV1MarginLeverageBracketData, GetSapiV1MarginLeverageBracketResponse, GetSapiV1MarginLeverageBracketError, GetSapiV1SystemStatusData, GetSapiV1SystemStatusResponse, GetSapiV1CapitalConfigGetallData, GetSapiV1CapitalConfigGetallResponse, GetSapiV1CapitalConfigGetallError, GetSapiV1AccountSnapshotData, GetSapiV1AccountSnapshotResponse, GetSapiV1AccountSnapshotError, PostSapiV1AccountDisableFastWithdrawSwitchData, PostSapiV1AccountDisableFastWithdrawSwitchResponse, PostSapiV1AccountDisableFastWithdrawSwitchError, PostSapiV1AccountEnableFastWithdrawSwitchData, PostSapiV1AccountEnableFastWithdrawSwitchResponse, PostSapiV1AccountEnableFastWithdrawSwitchError, PostSapiV1CapitalWithdrawApplyData, PostSapiV1CapitalWithdrawApplyResponse, PostSapiV1CapitalWithdrawApplyError, GetSapiV1CapitalDepositHisrecData, GetSapiV1CapitalDepositHisrecResponse, GetSapiV1CapitalDepositHisrecError, GetSapiV1CapitalWithdrawHistoryData, GetSapiV1CapitalWithdrawHistoryResponse, GetSapiV1CapitalWithdrawHistoryError, GetSapiV1CapitalDepositAddressData, GetSapiV1CapitalDepositAddressResponse, GetSapiV1CapitalDepositAddressError, GetSapiV1AccountStatusData, GetSapiV1AccountStatusResponse, GetSapiV1AccountStatusError, GetSapiV1AccountApiTradingStatusData, GetSapiV1AccountApiTradingStatusResponse, GetSapiV1AccountApiTradingStatusError, GetSapiV1AssetDribbletData, GetSapiV1AssetDribbletResponse, GetSapiV1AssetDribbletError, PostSapiV1AssetDustBtcData, PostSapiV1AssetDustBtcResponse, PostSapiV1AssetDustBtcError, PostSapiV1AssetDustData, PostSapiV1AssetDustResponse, PostSapiV1AssetDustError, GetSapiV1AssetAssetDividendData, GetSapiV1AssetAssetDividendResponse, GetSapiV1AssetAssetDividendError, GetSapiV1AssetAssetDetailData, GetSapiV1AssetAssetDetailResponse, GetSapiV1AssetAssetDetailError, GetSapiV1AssetTradeFeeData, GetSapiV1AssetTradeFeeResponse, GetSapiV1AssetTradeFeeError, GetSapiV1AssetTransferData, GetSapiV1AssetTransferResponse, GetSapiV1AssetTransferError, PostSapiV1AssetTransferData, PostSapiV1AssetTransferResponse, PostSapiV1AssetTransferError, PostSapiV1AssetGetFundingAssetData, PostSapiV1AssetGetFundingAssetResponse, PostSapiV1AssetGetFundingAssetError, PostSapiV3AssetGetUserAssetData, PostSapiV3AssetGetUserAssetResponse, PostSapiV3AssetGetUserAssetError, PostSapiV1AssetConvertTransferData, PostSapiV1AssetConvertTransferResponse, PostSapiV1AssetConvertTransferError, GetSapiV1AssetConvertTransferQueryByPageData, GetSapiV1AssetConvertTransferQueryByPageResponse, GetSapiV1AssetConvertTransferQueryByPageError, GetSapiV1AssetLedgerTransferCloudMiningQueryByPageData, GetSapiV1AssetLedgerTransferCloudMiningQueryByPageResponse, GetSapiV1AssetLedgerTransferCloudMiningQueryByPageError, GetSapiV1AccountApiRestrictionsData, GetSapiV1AccountApiRestrictionsResponse, GetSapiV1AccountApiRestrictionsError, GetSapiV1CapitalContractConvertibleCoinsData, GetSapiV1CapitalContractConvertibleCoinsResponse, GetSapiV1CapitalContractConvertibleCoinsError, PostSapiV1CapitalContractConvertibleCoinsData, PostSapiV1CapitalContractConvertibleCoinsResponse, PostSapiV1CapitalContractConvertibleCoinsError, PostSapiV1SubAccountVirtualSubAccountData, PostSapiV1SubAccountVirtualSubAccountResponse, PostSapiV1SubAccountVirtualSubAccountError, GetSapiV1SubAccountListData, GetSapiV1SubAccountListResponse, GetSapiV1SubAccountListError, GetSapiV1SubAccountSubTransferHistoryData, GetSapiV1SubAccountSubTransferHistoryResponse, GetSapiV1SubAccountSubTransferHistoryError, GetSapiV1SubAccountFuturesInternalTransferData, GetSapiV1SubAccountFuturesInternalTransferResponse, GetSapiV1SubAccountFuturesInternalTransferError, PostSapiV1SubAccountFuturesInternalTransferData, PostSapiV1SubAccountFuturesInternalTransferResponse, PostSapiV1SubAccountFuturesInternalTransferError, GetSapiV3SubAccountAssetsData, GetSapiV3SubAccountAssetsResponse, GetSapiV3SubAccountAssetsError, GetSapiV1SubAccountSpotSummaryData, GetSapiV1SubAccountSpotSummaryResponse, GetSapiV1SubAccountSpotSummaryError, GetSapiV1CapitalDepositSubAddressData, GetSapiV1CapitalDepositSubAddressResponse, GetSapiV1CapitalDepositSubAddressError, GetSapiV1CapitalDepositSubHisrecData, GetSapiV1CapitalDepositSubHisrecResponse, GetSapiV1CapitalDepositSubHisrecError, PostSapiV1CapitalDepositCreditApplyData, PostSapiV1CapitalDepositCreditApplyResponse, PostSapiV1CapitalDepositCreditApplyError, GetSapiV1AssetWalletBalanceData, GetSapiV1AssetWalletBalanceResponse, GetSapiV1AssetWalletBalanceError, GetSapiV1AssetCustodyTransferHistoryData, GetSapiV1AssetCustodyTransferHistoryResponse, GetSapiV1AssetCustodyTransferHistoryError, GetSapiV1CapitalDepositAddressListData, GetSapiV1CapitalDepositAddressListResponse, GetSapiV1CapitalDepositAddressListError, GetSapiV1SpotDelistScheduleData, GetSapiV1SpotDelistScheduleResponse, GetSapiV1SpotDelistScheduleError, GetSapiV1CapitalWithdrawAddressListData, GetSapiV1CapitalWithdrawAddressListResponse, GetSapiV1CapitalWithdrawAddressListError, GetSapiV1AccountInfoData, GetSapiV1AccountInfoResponse, GetSapiV1AccountInfoError, GetSapiV1SubAccountStatusData, GetSapiV1SubAccountStatusResponse, GetSapiV1SubAccountStatusError, PostSapiV1SubAccountMarginEnableData, PostSapiV1SubAccountMarginEnableResponse, PostSapiV1SubAccountMarginEnableError, GetSapiV1SubAccountMarginAccountData, GetSapiV1SubAccountMarginAccountResponse, GetSapiV1SubAccountMarginAccountError, GetSapiV1SubAccountMarginAccountSummaryData, GetSapiV1SubAccountMarginAccountSummaryResponse, GetSapiV1SubAccountMarginAccountSummaryError, PostSapiV1SubAccountFuturesEnableData, PostSapiV1SubAccountFuturesEnableResponse, PostSapiV1SubAccountFuturesEnableError, GetSapiV1SubAccountFuturesAccountData, GetSapiV1SubAccountFuturesAccountResponse, GetSapiV1SubAccountFuturesAccountError, GetSapiV1SubAccountFuturesAccountSummaryData, GetSapiV1SubAccountFuturesAccountSummaryResponse, GetSapiV1SubAccountFuturesAccountSummaryError, GetSapiV1SubAccountFuturesPositionRiskData, GetSapiV1SubAccountFuturesPositionRiskResponse, GetSapiV1SubAccountFuturesPositionRiskError, PostSapiV1SubAccountFuturesTransferData, PostSapiV1SubAccountFuturesTransferResponse, PostSapiV1SubAccountFuturesTransferError, PostSapiV1SubAccountMarginTransferData, PostSapiV1SubAccountMarginTransferResponse, PostSapiV1SubAccountMarginTransferError, PostSapiV1SubAccountTransferSubToSubData, PostSapiV1SubAccountTransferSubToSubResponse, PostSapiV1SubAccountTransferSubToSubError, PostSapiV1SubAccountTransferSubToMasterData, PostSapiV1SubAccountTransferSubToMasterResponse, PostSapiV1SubAccountTransferSubToMasterError, GetSapiV1SubAccountTransferSubUserHistoryData, GetSapiV1SubAccountTransferSubUserHistoryResponse, GetSapiV1SubAccountTransferSubUserHistoryError, GetSapiV1SubAccountUniversalTransferData, GetSapiV1SubAccountUniversalTransferResponse, GetSapiV1SubAccountUniversalTransferError, PostSapiV1SubAccountUniversalTransferData, PostSapiV1SubAccountUniversalTransferResponse, PostSapiV1SubAccountUniversalTransferError, GetSapiV2SubAccountFuturesAccountData, GetSapiV2SubAccountFuturesAccountResponse, GetSapiV2SubAccountFuturesAccountError, GetSapiV2SubAccountFuturesAccountSummaryData, GetSapiV2SubAccountFuturesAccountSummaryResponse, GetSapiV2SubAccountFuturesAccountSummaryError, GetSapiV2SubAccountFuturesPositionRiskData, GetSapiV2SubAccountFuturesPositionRiskResponse, GetSapiV2SubAccountFuturesPositionRiskError, PostSapiV1SubAccountBlvtEnableData, PostSapiV1SubAccountBlvtEnableResponse, PostSapiV1SubAccountBlvtEnableError, PostSapiV1ManagedSubaccountDepositData, PostSapiV1ManagedSubaccountDepositResponse, PostSapiV1ManagedSubaccountDepositError, GetSapiV1ManagedSubaccountAssetData, GetSapiV1ManagedSubaccountAssetResponse, GetSapiV1ManagedSubaccountAssetError, PostSapiV1ManagedSubaccountWithdrawData, PostSapiV1ManagedSubaccountWithdrawResponse, PostSapiV1ManagedSubaccountWithdrawError, GetSapiV1ManagedSubaccountAccountSnapshotData, GetSapiV1ManagedSubaccountAccountSnapshotResponse, GetSapiV1ManagedSubaccountAccountSnapshotError, GetSapiV1ManagedSubaccountQueryTransLogForInvestorData, GetSapiV1ManagedSubaccountQueryTransLogForInvestorResponse, GetSapiV1ManagedSubaccountQueryTransLogForInvestorError, GetSapiV1ManagedSubaccountQueryTransLogForTradeParentData, GetSapiV1ManagedSubaccountQueryTransLogForTradeParentResponse, GetSapiV1ManagedSubaccountQueryTransLogForTradeParentError, GetSapiV1ManagedSubaccountFetchFutureAssetData, GetSapiV1ManagedSubaccountFetchFutureAssetResponse, GetSapiV1ManagedSubaccountFetchFutureAssetError, GetSapiV1ManagedSubaccountMarginAssetData, GetSapiV1ManagedSubaccountMarginAssetResponse, GetSapiV1ManagedSubaccountMarginAssetError, GetSapiV1ManagedSubaccountInfoData, GetSapiV1ManagedSubaccountInfoResponse, GetSapiV1ManagedSubaccountInfoError, GetSapiV1ManagedSubaccountDepositAddressData, GetSapiV1ManagedSubaccountDepositAddressResponse, GetSapiV1ManagedSubaccountDepositAddressError, GetSapiV1ManagedSubaccountQueryTransLogData, GetSapiV1ManagedSubaccountQueryTransLogResponse, GetSapiV1ManagedSubaccountQueryTransLogError, GetSapiV1SubAccountSubAccountApiIpRestrictionData, GetSapiV1SubAccountSubAccountApiIpRestrictionResponse, GetSapiV1SubAccountSubAccountApiIpRestrictionError, DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListData, DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse, DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListError, GetSapiV1SubAccountTransactionStatisticsData, GetSapiV1SubAccountTransactionStatisticsResponse, GetSapiV1SubAccountTransactionStatisticsError, PostSapiV1SubAccountEoptionsEnableData, PostSapiV1SubAccountEoptionsEnableResponse, PostSapiV1SubAccountEoptionsEnableError, PostSapiV2SubAccountSubAccountApiIpRestrictionData, PostSapiV2SubAccountSubAccountApiIpRestrictionResponse, PostSapiV2SubAccountSubAccountApiIpRestrictionError, GetSapiV4SubAccountAssetsData, GetSapiV4SubAccountAssetsResponse, GetSapiV4SubAccountAssetsError, DeleteApiV3UserDataStreamData, DeleteApiV3UserDataStreamResponse, DeleteApiV3UserDataStreamError, PostApiV3UserDataStreamData, PostApiV3UserDataStreamResponse, PutApiV3UserDataStreamData, PutApiV3UserDataStreamResponse, PutApiV3UserDataStreamError, DeleteSapiV1UserDataStreamData, DeleteSapiV1UserDataStreamResponse, DeleteSapiV1UserDataStreamError, PostSapiV1UserDataStreamData, PostSapiV1UserDataStreamResponse, PutSapiV1UserDataStreamData, PutSapiV1UserDataStreamResponse, PutSapiV1UserDataStreamError, DeleteSapiV1UserDataStreamIsolatedData, DeleteSapiV1UserDataStreamIsolatedResponse, DeleteSapiV1UserDataStreamIsolatedError, PostSapiV1UserDataStreamIsolatedData, PostSapiV1UserDataStreamIsolatedResponse, PutSapiV1UserDataStreamIsolatedData, PutSapiV1UserDataStreamIsolatedResponse, PutSapiV1UserDataStreamIsolatedError, GetSapiV1FiatOrdersData, GetSapiV1FiatOrdersResponse, GetSapiV1FiatOrdersError, GetSapiV1FiatPaymentsData, GetSapiV1FiatPaymentsResponse, GetSapiV1FiatPaymentsError, GetSapiV1LendingProjectListData, GetSapiV1LendingProjectListResponse, GetSapiV1LendingProjectListError, PostSapiV1LendingCustomizedFixedPurchaseData, PostSapiV1LendingCustomizedFixedPurchaseResponse, PostSapiV1LendingCustomizedFixedPurchaseError, GetSapiV1LendingProjectPositionListData, GetSapiV1LendingProjectPositionListResponse, GetSapiV1LendingProjectPositionListError, PostSapiV1LendingPositionChangedData, PostSapiV1LendingPositionChangedResponse, PostSapiV1LendingPositionChangedError, GetSapiV1MiningPubAlgoListData, GetSapiV1MiningPubAlgoListResponse, GetSapiV1MiningPubAlgoListError, GetSapiV1MiningPubCoinListData, GetSapiV1MiningPubCoinListResponse, GetSapiV1MiningPubCoinListError, GetSapiV1MiningWorkerDetailData, GetSapiV1MiningWorkerDetailResponse, GetSapiV1MiningWorkerDetailError, GetSapiV1MiningWorkerListData, GetSapiV1MiningWorkerListResponse, GetSapiV1MiningWorkerListError, GetSapiV1MiningPaymentListData, GetSapiV1MiningPaymentListResponse, GetSapiV1MiningPaymentListError, GetSapiV1MiningPaymentOtherData, GetSapiV1MiningPaymentOtherResponse, GetSapiV1MiningPaymentOtherError, GetSapiV1MiningHashTransferConfigDetailsListData, GetSapiV1MiningHashTransferConfigDetailsListResponse, GetSapiV1MiningHashTransferConfigDetailsListError, GetSapiV1MiningHashTransferProfitDetailsData, GetSapiV1MiningHashTransferProfitDetailsResponse, GetSapiV1MiningHashTransferProfitDetailsError, PostSapiV1MiningHashTransferConfigData, PostSapiV1MiningHashTransferConfigResponse, PostSapiV1MiningHashTransferConfigError, PostSapiV1MiningHashTransferConfigCancelData, PostSapiV1MiningHashTransferConfigCancelResponse, PostSapiV1MiningHashTransferConfigCancelError, GetSapiV1MiningStatisticsUserStatusData, GetSapiV1MiningStatisticsUserStatusResponse, GetSapiV1MiningStatisticsUserStatusError, GetSapiV1MiningStatisticsUserListData, GetSapiV1MiningStatisticsUserListResponse, GetSapiV1MiningStatisticsUserListError, GetSapiV1MiningPaymentUidData, GetSapiV1MiningPaymentUidResponse, GetSapiV1MiningPaymentUidError, GetSapiV1FuturesTransferData, GetSapiV1FuturesTransferResponse, GetSapiV1FuturesTransferError, PostSapiV1FuturesTransferData, PostSapiV1FuturesTransferResponse, PostSapiV1FuturesTransferError, GetSapiV1FuturesHistDataLinkData, GetSapiV1FuturesHistDataLinkResponse, GetSapiV1FuturesHistDataLinkError, PostSapiV1AlgoFuturesNewOrderVpData, PostSapiV1AlgoFuturesNewOrderVpResponse, PostSapiV1AlgoFuturesNewOrderVpError, PostSapiV1AlgoFuturesNewOrderTwapData, PostSapiV1AlgoFuturesNewOrderTwapResponse, PostSapiV1AlgoFuturesNewOrderTwapError, DeleteSapiV1AlgoFuturesOrderData, DeleteSapiV1AlgoFuturesOrderResponse, DeleteSapiV1AlgoFuturesOrderError, GetSapiV1AlgoFuturesOpenOrdersData, GetSapiV1AlgoFuturesOpenOrdersResponse, GetSapiV1AlgoFuturesOpenOrdersError, GetSapiV1AlgoFuturesHistoricalOrdersData, GetSapiV1AlgoFuturesHistoricalOrdersResponse, GetSapiV1AlgoFuturesHistoricalOrdersError, GetSapiV1AlgoFuturesSubOrdersData, GetSapiV1AlgoFuturesSubOrdersResponse, GetSapiV1AlgoFuturesSubOrdersError, PostSapiV1AlgoSpotNewOrderTwapData, PostSapiV1AlgoSpotNewOrderTwapResponse, PostSapiV1AlgoSpotNewOrderTwapError, DeleteSapiV1AlgoSpotOrderData, DeleteSapiV1AlgoSpotOrderResponse, DeleteSapiV1AlgoSpotOrderError, GetSapiV1AlgoSpotOpenOrdersData, GetSapiV1AlgoSpotOpenOrdersResponse, GetSapiV1AlgoSpotOpenOrdersError, GetSapiV1AlgoSpotHistoricalOrdersData, GetSapiV1AlgoSpotHistoricalOrdersResponse, GetSapiV1AlgoSpotHistoricalOrdersError, GetSapiV1AlgoSpotSubOrdersData, GetSapiV1AlgoSpotSubOrdersResponse, GetSapiV1AlgoSpotSubOrdersError, GetSapiV1PortfolioAccountData, GetSapiV1PortfolioAccountResponse, GetSapiV1PortfolioAccountError, GetSapiV1PortfolioCollateralRateData, GetSapiV1PortfolioCollateralRateResponse, GetSapiV1PortfolioCollateralRateError, GetSapiV2PortfolioCollateralRateData, GetSapiV2PortfolioCollateralRateResponse, GetSapiV2PortfolioCollateralRateError, GetSapiV1PortfolioPmLoanData, GetSapiV1PortfolioPmLoanResponse, GetSapiV1PortfolioPmLoanError, PostSapiV1PortfolioRepayData, PostSapiV1PortfolioRepayResponse, PostSapiV1PortfolioRepayError, GetSapiV1PortfolioInterestHistoryData, GetSapiV1PortfolioInterestHistoryResponse, GetSapiV1PortfolioInterestHistoryError, GetSapiV1PortfolioAssetIndexPriceData, GetSapiV1PortfolioAssetIndexPriceResponse, GetSapiV1PortfolioAssetIndexPriceError, PostSapiV1PortfolioAutoCollectionData, PostSapiV1PortfolioAutoCollectionResponse, PostSapiV1PortfolioAutoCollectionError, PostSapiV1PortfolioBnbTransferData, PostSapiV1PortfolioBnbTransferResponse, PostSapiV1PortfolioBnbTransferError, GetSapiV1PortfolioRepayFuturesSwitchData, GetSapiV1PortfolioRepayFuturesSwitchResponse, GetSapiV1PortfolioRepayFuturesSwitchError, PostSapiV1PortfolioRepayFuturesSwitchData, PostSapiV1PortfolioRepayFuturesSwitchResponse, PostSapiV1PortfolioRepayFuturesSwitchError, PostSapiV1PortfolioRepayFuturesNegativeBalanceData, PostSapiV1PortfolioRepayFuturesNegativeBalanceResponse, PostSapiV1PortfolioRepayFuturesNegativeBalanceError, GetSapiV1PortfolioMarginAssetLeverageData, GetSapiV1PortfolioMarginAssetLeverageResponse, GetSapiV1PortfolioMarginAssetLeverageError, PostSapiV1PortfolioAssetCollectionData, PostSapiV1PortfolioAssetCollectionResponse, PostSapiV1PortfolioAssetCollectionError, GetSapiV1BlvtTokenInfoData, GetSapiV1BlvtTokenInfoResponse, GetSapiV1BlvtTokenInfoError, PostSapiV1BlvtSubscribeData, PostSapiV1BlvtSubscribeResponse, PostSapiV1BlvtSubscribeError, GetSapiV1BlvtSubscribeRecordData, GetSapiV1BlvtSubscribeRecordResponse, GetSapiV1BlvtSubscribeRecordError, PostSapiV1BlvtRedeemData, PostSapiV1BlvtRedeemResponse, PostSapiV1BlvtRedeemError, GetSapiV1BlvtRedeemRecordData, GetSapiV1BlvtRedeemRecordResponse, GetSapiV1BlvtRedeemRecordError, GetSapiV1BlvtUserLimitData, GetSapiV1BlvtUserLimitResponse, GetSapiV1BlvtUserLimitError, GetSapiV1C2cOrderMatchListUserOrderHistoryData, GetSapiV1C2cOrderMatchListUserOrderHistoryResponse, GetSapiV1C2cOrderMatchListUserOrderHistoryError, GetSapiV1LoanVipOngoingOrdersData, GetSapiV1LoanVipOngoingOrdersResponse, GetSapiV1LoanVipOngoingOrdersError, PostSapiV1LoanVipRepayData, PostSapiV1LoanVipRepayResponse, PostSapiV1LoanVipRepayError, GetSapiV1LoanVipRepayHistoryData, GetSapiV1LoanVipRepayHistoryResponse, GetSapiV1LoanVipRepayHistoryError, GetSapiV1LoanVipCollateralAccountData, GetSapiV1LoanVipCollateralAccountResponse, GetSapiV1LoanVipCollateralAccountError, PostSapiV1LoanVipBorrowData, PostSapiV1LoanVipBorrowResponse, PostSapiV1LoanVipBorrowError, GetSapiV1LoanVipLoanableDataData, GetSapiV1LoanVipLoanableDataResponse, GetSapiV1LoanVipLoanableDataError, GetSapiV1LoanVipCollateralDataData, GetSapiV1LoanVipCollateralDataResponse, GetSapiV1LoanVipCollateralDataError, GetSapiV1LoanVipRequestDataData, GetSapiV1LoanVipRequestDataResponse, GetSapiV1LoanVipRequestDataError, GetSapiV1LoanVipRequestInterestRateData, GetSapiV1LoanVipRequestInterestRateResponse, GetSapiV1LoanVipRequestInterestRateError, PostSapiV1LoanVipRenewData, PostSapiV1LoanVipRenewResponse, PostSapiV1LoanVipRenewError, GetSapiV1LoanIncomeData, GetSapiV1LoanIncomeResponse, GetSapiV1LoanIncomeError, PostSapiV1LoanBorrowData, PostSapiV1LoanBorrowResponse, PostSapiV1LoanBorrowError, GetSapiV1LoanBorrowHistoryData, GetSapiV1LoanBorrowHistoryResponse, GetSapiV1LoanBorrowHistoryError, GetSapiV1LoanOngoingOrdersData, GetSapiV1LoanOngoingOrdersResponse, GetSapiV1LoanOngoingOrdersError, PostSapiV1LoanRepayData, PostSapiV1LoanRepayResponse, PostSapiV1LoanRepayError, GetSapiV1LoanRepayHistoryData, GetSapiV1LoanRepayHistoryResponse, GetSapiV1LoanRepayHistoryError, PostSapiV1LoanAdjustLtvData, PostSapiV1LoanAdjustLtvResponse, PostSapiV1LoanAdjustLtvError, GetSapiV1LoanLtvAdjustmentHistoryData, GetSapiV1LoanLtvAdjustmentHistoryResponse, GetSapiV1LoanLtvAdjustmentHistoryError, GetSapiV1LoanLoanableDataData, GetSapiV1LoanLoanableDataResponse, GetSapiV1LoanLoanableDataError, GetSapiV1LoanCollateralDataData, GetSapiV1LoanCollateralDataResponse, GetSapiV1LoanCollateralDataError, GetSapiV1LoanRepayCollateralRateData, GetSapiV1LoanRepayCollateralRateResponse, GetSapiV1LoanRepayCollateralRateError, PostSapiV1LoanCustomizeMarginCallData, PostSapiV1LoanCustomizeMarginCallResponse, PostSapiV1LoanCustomizeMarginCallError, PostSapiV2LoanFlexibleBorrowData, PostSapiV2LoanFlexibleBorrowResponse, PostSapiV2LoanFlexibleBorrowError, GetSapiV2LoanFlexibleOngoingOrdersData, GetSapiV2LoanFlexibleOngoingOrdersResponse, GetSapiV2LoanFlexibleOngoingOrdersError, GetSapiV2LoanFlexibleBorrowHistoryData, GetSapiV2LoanFlexibleBorrowHistoryResponse, GetSapiV2LoanFlexibleBorrowHistoryError, PostSapiV2LoanFlexibleRepayData, PostSapiV2LoanFlexibleRepayResponse, PostSapiV2LoanFlexibleRepayError, GetSapiV2LoanFlexibleRepayHistoryData, GetSapiV2LoanFlexibleRepayHistoryResponse, GetSapiV2LoanFlexibleRepayHistoryError, PostSapiV2LoanFlexibleAdjustLtvData, PostSapiV2LoanFlexibleAdjustLtvResponse, PostSapiV2LoanFlexibleAdjustLtvError, GetSapiV2LoanFlexibleLtvAdjustmentHistoryData, GetSapiV2LoanFlexibleLtvAdjustmentHistoryResponse, GetSapiV2LoanFlexibleLtvAdjustmentHistoryError, GetSapiV2LoanFlexibleLoanableDataData, GetSapiV2LoanFlexibleLoanableDataResponse, GetSapiV2LoanFlexibleLoanableDataError, GetSapiV2LoanFlexibleCollateralDataData, GetSapiV2LoanFlexibleCollateralDataResponse, GetSapiV2LoanFlexibleCollateralDataError, GetSapiV1PayTransactionsData, GetSapiV1PayTransactionsResponse, GetSapiV1PayTransactionsError, GetSapiV1ConvertExchangeInfoData, GetSapiV1ConvertExchangeInfoResponse, GetSapiV1ConvertExchangeInfoError, GetSapiV1ConvertAssetInfoData, GetSapiV1ConvertAssetInfoResponse, GetSapiV1ConvertAssetInfoError, PostSapiV1ConvertGetQuoteData, PostSapiV1ConvertGetQuoteResponse, PostSapiV1ConvertGetQuoteError, PostSapiV1ConvertAcceptQuoteData, PostSapiV1ConvertAcceptQuoteResponse, PostSapiV1ConvertAcceptQuoteError, GetSapiV1ConvertOrderStatusData, GetSapiV1ConvertOrderStatusResponse, GetSapiV1ConvertOrderStatusError, PostSapiV1ConvertLimitPlaceOrderData, PostSapiV1ConvertLimitPlaceOrderResponse, PostSapiV1ConvertLimitPlaceOrderError, PostSapiV1ConvertLimitCancelOrderData, PostSapiV1ConvertLimitCancelOrderResponse, PostSapiV1ConvertLimitCancelOrderError, GetSapiV1ConvertLimitQueryOpenOrdersData, GetSapiV1ConvertLimitQueryOpenOrdersResponse, GetSapiV1ConvertLimitQueryOpenOrdersError, GetSapiV1ConvertTradeFlowData, GetSapiV1ConvertTradeFlowResponse, GetSapiV1ConvertTradeFlowError, GetSapiV1RebateTaxQueryData, GetSapiV1RebateTaxQueryResponse, GetSapiV1RebateTaxQueryError, GetSapiV1NftHistoryTransactionsData, GetSapiV1NftHistoryTransactionsResponse, GetSapiV1NftHistoryTransactionsError, GetSapiV1NftHistoryDepositData, GetSapiV1NftHistoryDepositResponse, GetSapiV1NftHistoryDepositError, GetSapiV1NftHistoryWithdrawData, GetSapiV1NftHistoryWithdrawResponse, GetSapiV1NftHistoryWithdrawError, GetSapiV1NftUserGetAssetData, GetSapiV1NftUserGetAssetResponse, GetSapiV1NftUserGetAssetError, PostSapiV1GiftcardCreateCodeData, PostSapiV1GiftcardCreateCodeResponse, PostSapiV1GiftcardCreateCodeError, PostSapiV1GiftcardRedeemCodeData, PostSapiV1GiftcardRedeemCodeResponse, PostSapiV1GiftcardRedeemCodeError, GetSapiV1GiftcardVerifyData, GetSapiV1GiftcardVerifyResponse, GetSapiV1GiftcardVerifyError, GetSapiV1GiftcardCryptographyRsaPublicKeyData, GetSapiV1GiftcardCryptographyRsaPublicKeyResponse, GetSapiV1GiftcardCryptographyRsaPublicKeyError, PostSapiV1GiftcardBuyCodeData, PostSapiV1GiftcardBuyCodeResponse, PostSapiV1GiftcardBuyCodeError, GetSapiV1GiftcardBuyCodeTokenLimitData, GetSapiV1GiftcardBuyCodeTokenLimitResponse, GetSapiV1GiftcardBuyCodeTokenLimitError, GetSapiV1LendingAutoInvestTargetAssetListData, GetSapiV1LendingAutoInvestTargetAssetListResponse, GetSapiV1LendingAutoInvestTargetAssetListError, GetSapiV1LendingAutoInvestTargetAssetRoiListData, GetSapiV1LendingAutoInvestTargetAssetRoiListResponse, GetSapiV1LendingAutoInvestTargetAssetRoiListError, GetSapiV1LendingAutoInvestAllAssetData, GetSapiV1LendingAutoInvestAllAssetResponse, GetSapiV1LendingAutoInvestAllAssetError, GetSapiV1LendingAutoInvestSourceAssetListData, GetSapiV1LendingAutoInvestSourceAssetListResponse, GetSapiV1LendingAutoInvestSourceAssetListError, PostSapiV1LendingAutoInvestPlanAddData, PostSapiV1LendingAutoInvestPlanAddResponse, PostSapiV1LendingAutoInvestPlanAddError, PostSapiV1LendingAutoInvestPlanEditData, PostSapiV1LendingAutoInvestPlanEditResponse, PostSapiV1LendingAutoInvestPlanEditError, PostSapiV1LendingAutoInvestPlanEditStatusData, PostSapiV1LendingAutoInvestPlanEditStatusResponse, PostSapiV1LendingAutoInvestPlanEditStatusError, GetSapiV1LendingAutoInvestPlanListData, GetSapiV1LendingAutoInvestPlanListResponse, GetSapiV1LendingAutoInvestPlanListError, GetSapiV1LendingAutoInvestPlanIdData, GetSapiV1LendingAutoInvestPlanIdResponse, GetSapiV1LendingAutoInvestPlanIdError, GetSapiV1LendingAutoInvestHistoryListData, GetSapiV1LendingAutoInvestHistoryListResponse, GetSapiV1LendingAutoInvestHistoryListError, GetSapiV1LendingAutoInvestIndexInfoData, GetSapiV1LendingAutoInvestIndexInfoResponse, GetSapiV1LendingAutoInvestIndexInfoError, GetSapiV1LendingAutoInvestIndexUserSummaryData, GetSapiV1LendingAutoInvestIndexUserSummaryResponse, GetSapiV1LendingAutoInvestIndexUserSummaryError, PostSapiV1LendingAutoInvestOneOffData, PostSapiV1LendingAutoInvestOneOffResponse, PostSapiV1LendingAutoInvestOneOffError, GetSapiV1LendingAutoInvestOneOffStatusData, GetSapiV1LendingAutoInvestOneOffStatusResponse, GetSapiV1LendingAutoInvestOneOffStatusError, PostSapiV1LendingAutoInvestRedeemData, PostSapiV1LendingAutoInvestRedeemResponse, PostSapiV1LendingAutoInvestRedeemError, GetSapiV1LendingAutoInvestRedeemHistoryData, GetSapiV1LendingAutoInvestRedeemHistoryResponse, GetSapiV1LendingAutoInvestRedeemHistoryError, GetSapiV1LendingAutoInvestRebalanceHistoryData, GetSapiV1LendingAutoInvestRebalanceHistoryResponse, GetSapiV1LendingAutoInvestRebalanceHistoryError, PostSapiV2EthStakingEthStakeData, PostSapiV2EthStakingEthStakeResponse, PostSapiV2EthStakingEthStakeError, PostSapiV1EthStakingEthRedeemData, PostSapiV1EthStakingEthRedeemResponse, PostSapiV1EthStakingEthRedeemError, GetSapiV1EthStakingEthHistoryStakingHistoryData, GetSapiV1EthStakingEthHistoryStakingHistoryResponse, GetSapiV1EthStakingEthHistoryStakingHistoryError, GetSapiV1EthStakingEthHistoryRedemptionHistoryData, GetSapiV1EthStakingEthHistoryRedemptionHistoryResponse, GetSapiV1EthStakingEthHistoryRedemptionHistoryError, GetSapiV1EthStakingEthHistoryRewardsHistoryData, GetSapiV1EthStakingEthHistoryRewardsHistoryResponse, GetSapiV1EthStakingEthHistoryRewardsHistoryError, GetSapiV1EthStakingEthQuotaData, GetSapiV1EthStakingEthQuotaResponse, GetSapiV1EthStakingEthQuotaError, GetSapiV1EthStakingEthHistoryRateHistoryData, GetSapiV1EthStakingEthHistoryRateHistoryResponse, GetSapiV1EthStakingEthHistoryRateHistoryError, GetSapiV2EthStakingAccountData, GetSapiV2EthStakingAccountResponse, GetSapiV2EthStakingAccountError, PostSapiV1EthStakingWbethWrapData, PostSapiV1EthStakingWbethWrapResponse, PostSapiV1EthStakingWbethWrapError, GetSapiV1EthStakingWbethHistoryWrapHistoryData, GetSapiV1EthStakingWbethHistoryWrapHistoryResponse, GetSapiV1EthStakingWbethHistoryWrapHistoryError, GetSapiV1EthStakingWbethHistoryUnwrapHistoryData, GetSapiV1EthStakingWbethHistoryUnwrapHistoryResponse, GetSapiV1EthStakingWbethHistoryUnwrapHistoryError, GetSapiV1EthStakingEthHistoryWbethRewardsHistoryData, GetSapiV1EthStakingEthHistoryWbethRewardsHistoryResponse, GetSapiV1EthStakingEthHistoryWbethRewardsHistoryError, GetSapiV1CopyTradingFuturesUserStatusData, GetSapiV1CopyTradingFuturesUserStatusResponse, GetSapiV1CopyTradingFuturesUserStatusError, GetSapiV1CopyTradingFuturesLeadSymbolData, GetSapiV1CopyTradingFuturesLeadSymbolResponse, GetSapiV1CopyTradingFuturesLeadSymbolError, GetSapiV1SimpleEarnFlexibleListData, GetSapiV1SimpleEarnFlexibleListResponse, GetSapiV1SimpleEarnFlexibleListError, GetSapiV1SimpleEarnLockedListData, GetSapiV1SimpleEarnLockedListResponse, GetSapiV1SimpleEarnLockedListError, PostSapiV1SimpleEarnFlexibleSubscribeData, PostSapiV1SimpleEarnFlexibleSubscribeResponse, PostSapiV1SimpleEarnFlexibleSubscribeError, PostSapiV1SimpleEarnLockedSubscribeData, PostSapiV1SimpleEarnLockedSubscribeResponse, PostSapiV1SimpleEarnLockedSubscribeError, PostSapiV1SimpleEarnFlexibleRedeemData, PostSapiV1SimpleEarnFlexibleRedeemResponse, PostSapiV1SimpleEarnFlexibleRedeemError, PostSapiV1SimpleEarnLockedRedeemData, PostSapiV1SimpleEarnLockedRedeemResponse, PostSapiV1SimpleEarnLockedRedeemError, GetSapiV1SimpleEarnFlexiblePositionData, GetSapiV1SimpleEarnFlexiblePositionResponse, GetSapiV1SimpleEarnFlexiblePositionError, GetSapiV1SimpleEarnLockedPositionData, GetSapiV1SimpleEarnLockedPositionResponse, GetSapiV1SimpleEarnLockedPositionError, GetSapiV1SimpleEarnAccountData, GetSapiV1SimpleEarnAccountResponse, GetSapiV1SimpleEarnAccountError, GetSapiV1SimpleEarnFlexibleHistorySubscriptionRecordData, GetSapiV1SimpleEarnFlexibleHistorySubscriptionRecordResponse, GetSapiV1SimpleEarnFlexibleHistorySubscriptionRecordError, GetSapiV1SimpleEarnLockedHistorySubscriptionRecordData, GetSapiV1SimpleEarnLockedHistorySubscriptionRecordResponse, GetSapiV1SimpleEarnLockedHistorySubscriptionRecordError, GetSapiV1SimpleEarnFlexibleHistoryRedemptionRecordData, GetSapiV1SimpleEarnFlexibleHistoryRedemptionRecordResponse, GetSapiV1SimpleEarnFlexibleHistoryRedemptionRecordError, GetSapiV1SimpleEarnLockedHistoryRedemptionRecordData, GetSapiV1SimpleEarnLockedHistoryRedemptionRecordResponse, GetSapiV1SimpleEarnLockedHistoryRedemptionRecordError, GetSapiV1SimpleEarnFlexibleHistoryRewardsRecordData, GetSapiV1SimpleEarnFlexibleHistoryRewardsRecordResponse, GetSapiV1SimpleEarnFlexibleHistoryRewardsRecordError, GetSapiV1SimpleEarnLockedHistoryRewardsRecordData, GetSapiV1SimpleEarnLockedHistoryRewardsRecordResponse, GetSapiV1SimpleEarnLockedHistoryRewardsRecordError, PostSapiV1SimpleEarnFlexibleSetAutoSubscribeData, PostSapiV1SimpleEarnFlexibleSetAutoSubscribeResponse, PostSapiV1SimpleEarnFlexibleSetAutoSubscribeError, PostSapiV1SimpleEarnLockedSetAutoSubscribeData, PostSapiV1SimpleEarnLockedSetAutoSubscribeResponse, PostSapiV1SimpleEarnLockedSetAutoSubscribeError, GetSapiV1SimpleEarnFlexiblePersonalLeftQuotaData, GetSapiV1SimpleEarnFlexiblePersonalLeftQuotaResponse, GetSapiV1SimpleEarnFlexiblePersonalLeftQuotaError, GetSapiV1SimpleEarnLockedPersonalLeftQuotaData, GetSapiV1SimpleEarnLockedPersonalLeftQuotaResponse, GetSapiV1SimpleEarnLockedPersonalLeftQuotaError, GetSapiV1SimpleEarnFlexibleSubscriptionPreviewData, GetSapiV1SimpleEarnFlexibleSubscriptionPreviewResponse, GetSapiV1SimpleEarnFlexibleSubscriptionPreviewError, GetSapiV1SimpleEarnLockedSubscriptionPreviewData, GetSapiV1SimpleEarnLockedSubscriptionPreviewResponse, GetSapiV1SimpleEarnLockedSubscriptionPreviewError, GetSapiV1SimpleEarnLockedSetRedeemOptionData, GetSapiV1SimpleEarnLockedSetRedeemOptionResponse, GetSapiV1SimpleEarnLockedSetRedeemOptionError, GetSapiV1SimpleEarnFlexibleHistoryRateHistoryData, GetSapiV1SimpleEarnFlexibleHistoryRateHistoryResponse, GetSapiV1SimpleEarnFlexibleHistoryRateHistoryError, GetSapiV1SimpleEarnFlexibleHistoryCollateralRecordData, GetSapiV1SimpleEarnFlexibleHistoryCollateralRecordResponse, GetSapiV1SimpleEarnFlexibleHistoryCollateralRecordError, GetSapiV1DciProductListData, GetSapiV1DciProductListResponse, GetSapiV1DciProductListError, PostSapiV1DciProductSubscribeData, PostSapiV1DciProductSubscribeResponse, PostSapiV1DciProductSubscribeError, GetSapiV1DciProductPositionsData, GetSapiV1DciProductPositionsResponse, GetSapiV1DciProductPositionsError, GetSapiV1DciProductAccountsData, GetSapiV1DciProductAccountsResponse, GetSapiV1DciProductAccountsError, PostSapiV1DciProductAutoCompoundEditStatusData, PostSapiV1DciProductAutoCompoundEditStatusResponse, PostSapiV1DciProductAutoCompoundEditStatusError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Test Connectivity
 * Test connectivity to the Rest API.
 *
 * Weight(IP): 1
 */
export const getApiV3Ping = <ThrowOnError extends boolean = false>(options?: Options<GetApiV3PingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV3PingResponse, unknown, ThrowOnError>({
        url: '/api/v3/ping',
        ...options
    });
};

/**
 * Check Server Time
 * Test connectivity to the Rest API and get the current server time.
 *
 * Weight(IP): 1
 */
export const getApiV3Time = <ThrowOnError extends boolean = false>(options?: Options<GetApiV3TimeData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV3TimeResponse, unknown, ThrowOnError>({
        url: '/api/v3/time',
        ...options
    });
};

/**
 * Exchange Information
 * Current exchange trading rules and symbol information
 *
 * - If any symbol provided in either symbol or symbols do not exist, the endpoint will throw an error.
 * - All parameters are optional.
 * - permissions can support single or multiple values (e.g. SPOT, ["MARGIN","LEVERAGED"])
 * - If permissions parameter not provided, the default values will be ["SPOT","MARGIN","LEVERAGED"].
 * - To display all permissions you need to specify them explicitly. (e.g. SPOT, MARGIN,...)
 *
 * Examples of Symbol Permissions Interpretation from the Response:
 * - [["A","B"]] means you may place an order if your account has either permission "A" or permission "B".
 * - [["A"],["B"]] means you can place an order if your account has permission "A" and permission "B".
 * - [["A"],["B","C"]] means you can place an order if your account has permission "A" and permission "B" or permission "C". (Inclusive or is applied here, not exclusive or, so your account may have both permission "B" and permission "C".)
 *
 * Weight(IP): 10
 */
export const getApiV3ExchangeInfo = <ThrowOnError extends boolean = false>(options?: Options<GetApiV3ExchangeInfoData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV3ExchangeInfoResponse, GetApiV3ExchangeInfoError, ThrowOnError>({
        url: '/api/v3/exchangeInfo',
        ...options
    });
};

/**
 * Order Book
 * | Limit               | Weight(IP)  |
 * |---------------------|-------------|
 * | 1-100               | 5           |
 * | 101-500             | 25          |
 * | 501-1000            | 50          |
 * | 1001-5000           | 250         |
 */
export const getApiV3Depth = <ThrowOnError extends boolean = false>(options: Options<GetApiV3DepthData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3DepthResponse, GetApiV3DepthError, ThrowOnError>({
        url: '/api/v3/depth',
        ...options
    });
};

/**
 * Recent Trades List
 * Get recent trades.
 *
 * Weight(IP): 10
 */
export const getApiV3Trades = <ThrowOnError extends boolean = false>(options: Options<GetApiV3TradesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3TradesResponse, GetApiV3TradesError, ThrowOnError>({
        url: '/api/v3/trades',
        ...options
    });
};

/**
 * Old Trade Lookup
 * Get older market trades.
 *
 * Weight(IP): 10
 */
export const getApiV3HistoricalTrades = <ThrowOnError extends boolean = false>(options: Options<GetApiV3HistoricalTradesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3HistoricalTradesResponse, unknown, ThrowOnError>({
        url: '/api/v3/historicalTrades',
        ...options
    });
};

/**
 * Compressed/Aggregate Trades List
 * Get compressed, aggregate trades. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
 * - If `fromId`, `startTime`, and `endTime` are not sent, the most recent aggregate trades will be returned.
 * - Note that if a trade has the following values, this was a duplicate aggregate trade and marked as invalid:
 *
 * p = '0' // price
 *
 * q = '0' // qty
 *
 * f = -1 // ﬁrst_trade_id
 *
 * l = -1 // last_trade_id
 *
 * Weight(IP): 2
 */
export const getApiV3AggTrades = <ThrowOnError extends boolean = false>(options: Options<GetApiV3AggTradesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3AggTradesResponse, GetApiV3AggTradesError, ThrowOnError>({
        url: '/api/v3/aggTrades',
        ...options
    });
};

/**
 * Kline/Candlestick Data
 * Kline/candlestick bars for a symbol.
 * Klines are uniquely identified by their open time.
 *
 * - If `startTime` and `endTime` are not sent, the most recent klines are returned.
 *
 * Weight(IP): 2
 */
export const getApiV3Klines = <ThrowOnError extends boolean = false>(options: Options<GetApiV3KlinesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3KlinesResponse, GetApiV3KlinesError, ThrowOnError>({
        url: '/api/v3/klines',
        ...options
    });
};

/**
 * UIKlines
 * The request is similar to klines having the same parameters and response.
 *
 * uiKlines return modified kline data, optimized for presentation of candlestick charts.
 *
 * Weight(IP): 2
 */
export const getApiV3UiKlines = <ThrowOnError extends boolean = false>(options: Options<GetApiV3UiKlinesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3UiKlinesResponse, GetApiV3UiKlinesError, ThrowOnError>({
        url: '/api/v3/uiKlines',
        ...options
    });
};

/**
 * Current Average Price
 * Current average price for a symbol.
 *
 * Weight(IP): 2
 */
export const getApiV3AvgPrice = <ThrowOnError extends boolean = false>(options: Options<GetApiV3AvgPriceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3AvgPriceResponse, GetApiV3AvgPriceError, ThrowOnError>({
        url: '/api/v3/avgPrice',
        ...options
    });
};

/**
 * 24hr Ticker Price Change Statistics
 * 24 hour rolling window price change statistics. Careful when accessing this with no symbol.
 *
 * - If the symbol is not sent, tickers for all symbols will be returned in an array.
 *
 * Weight(IP):
 * - `2` for a single symbol;
 * - `80` when the symbol parameter is omitted;
 */
export const getApiV3Ticker24Hr = <ThrowOnError extends boolean = false>(options?: Options<GetApiV3Ticker24HrData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV3Ticker24HrResponse, GetApiV3Ticker24HrError, ThrowOnError>({
        url: '/api/v3/ticker/24hr',
        ...options
    });
};

/**
 * Trading Day Ticker
 * Price change statistics for a trading day.
 *
 * Notes:
 * - Supported values for timeZone:
 * - Hours and minutes (e.g. -1:00, 05:45)
 * - Only hours (e.g. 0, 8, 4)
 *
 * Weight:
 * - `4` for each requested symbol.
 * - The weight for this request will cap at `200` once the number of symbols in the request is more than `50`.
 */
export const getApiV3TickerTradingDay = <ThrowOnError extends boolean = false>(options?: Options<GetApiV3TickerTradingDayData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV3TickerTradingDayResponse, GetApiV3TickerTradingDayError, ThrowOnError>({
        url: '/api/v3/ticker/tradingDay',
        ...options
    });
};

/**
 * Symbol Price Ticker
 * Latest price for a symbol or symbols.
 *
 * - If the symbol is not sent, prices for all symbols will be returned in an array.
 *
 * Weight(IP):
 * - `2` for a single symbol;
 * - `4` when the symbol parameter is omitted;
 */
export const getApiV3TickerPrice = <ThrowOnError extends boolean = false>(options?: Options<GetApiV3TickerPriceData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV3TickerPriceResponse, GetApiV3TickerPriceError, ThrowOnError>({
        url: '/api/v3/ticker/price',
        ...options
    });
};

/**
 * Symbol Order Book Ticker
 * Best price/qty on the order book for a symbol or symbols.
 *
 * - If the symbol is not sent, bookTickers for all symbols will be returned in an array.
 *
 * Weight(IP):
 * - `2` for a single symbol;
 * - `4` when the symbol parameter is omitted;
 */
export const getApiV3TickerBookTicker = <ThrowOnError extends boolean = false>(options?: Options<GetApiV3TickerBookTickerData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV3TickerBookTickerResponse, GetApiV3TickerBookTickerError, ThrowOnError>({
        url: '/api/v3/ticker/bookTicker',
        ...options
    });
};

/**
 * Rolling window price change statistics
 * The window used to compute statistics is typically slightly wider than requested windowSize.
 *
 * openTime for /api/v3/ticker always starts on a minute, while the closeTime is the current time of the request. As such, the effective window might be up to 1 minute wider than requested.
 *
 * E.g. If the closeTime is 1641287867099 (January 04, 2022 09:17:47:099 UTC) , and the windowSize is 1d. the openTime will be: 1641201420000 (January 3, 2022, 09:17:00 UTC)
 *
 * Weight(IP): 4 for each requested symbol regardless of windowSize.
 *
 * The weight for this request will cap at 200 once the number of symbols in the request is more than 50.
 */
export const getApiV3Ticker = <ThrowOnError extends boolean = false>(options?: Options<GetApiV3TickerData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV3TickerResponse, GetApiV3TickerError, ThrowOnError>({
        url: '/api/v3/ticker',
        ...options
    });
};

/**
 * Test New Order (TRADE)
 * Test new order creation and signature/recvWindow long.
 * Creates and validates a new order but does not send it into the matching engine.
 *
 * Weight(IP):
 * - Without computeCommissionRates: `1`
 * - With computeCommissionRates: `20`
 */
export const postApiV3OrderTest = <ThrowOnError extends boolean = false>(options: Options<PostApiV3OrderTestData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV3OrderTestResponse, PostApiV3OrderTestError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/order/test',
        ...options
    });
};

/**
 * Cancel Order (TRADE)
 * Cancel an active order.
 *
 * Either `orderId` or `origClientOrderId` must be sent.
 *
 * Weight(IP): 1
 */
export const deleteApiV3Order = <ThrowOnError extends boolean = false>(options: Options<DeleteApiV3OrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiV3OrderResponse, DeleteApiV3OrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/order',
        ...options
    });
};

/**
 * Query Order (USER_DATA)
 * Check an order's status.
 *
 * - Either `orderId` or `origClientOrderId` must be sent.
 * - For some historical orders `cummulativeQuoteQty` will be < 0, meaning the data is not available at this time.
 *
 * Weight(IP): 4
 */
export const getApiV3Order = <ThrowOnError extends boolean = false>(options: Options<GetApiV3OrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3OrderResponse, GetApiV3OrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/order',
        ...options
    });
};

/**
 * New Order (TRADE)
 * Send in a new order.
 *
 * - `LIMIT_MAKER` are `LIMIT` orders that will be rejected if they would immediately match and trade as a taker.
 * - `STOP_LOSS` and `TAKE_PROFIT` will execute a `MARKET` order when the `stopPrice` is reached.
 * - Any `LIMIT` or `LIMIT_MAKER` type order can be made an iceberg order by sending an `icebergQty`.
 * - Any order with an `icebergQty` MUST have `timeInForce` set to `GTC`.
 * - `MARKET` orders using `quantity` specifies how much a user wants to buy or sell based on the market price.
 * - `MARKET` orders using `quoteOrderQty` specifies the amount the user wants to spend (when buying) or receive (when selling) of the quote asset; the correct quantity will be determined based on the market liquidity and `quoteOrderQty`.
 * - `MARKET` orders using `quoteOrderQty` will not break `LOT_SIZE` filter rules; the order will execute a quantity that will have the notional value as close as possible to `quoteOrderQty`.
 * - same `newClientOrderId` can be accepted only when the previous one is filled, otherwise the order will be rejected.
 *
 * Trigger order price rules against market price for both `MARKET` and `LIMIT` versions:
 *
 * - Price above market price: `STOP_LOSS` `BUY`, `TAKE_PROFIT` `SELL`
 * - Price below market price: `STOP_LOSS` `SELL`, `TAKE_PROFIT` `BUY`
 *
 *
 * Weight(IP): 1
 */
export const postApiV3Order = <ThrowOnError extends boolean = false>(options: Options<PostApiV3OrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV3OrderResponse, PostApiV3OrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/order',
        ...options
    });
};

/**
 * Cancel an Existing Order and Send a New Order (Trade)
 * Cancels an existing order and places a new order on the same symbol.
 *
 * Filters and Order Count are evaluated before the processing of the cancellation and order placement occurs.
 *
 * A new order that was not attempted (i.e. when newOrderResult: NOT_ATTEMPTED), will still increase the order count by 1.
 *
 * Weight(IP): 1
 */
export const postApiV3OrderCancelReplace = <ThrowOnError extends boolean = false>(options: Options<PostApiV3OrderCancelReplaceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV3OrderCancelReplaceResponse, PostApiV3OrderCancelReplaceError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/order/cancelReplace',
        ...options
    });
};

/**
 * Cancel all Open Orders on a Symbol (TRADE)
 * Cancels all active orders on a symbol.
 * This includes OCO orders.
 *
 * Weight(IP): 1
 */
export const deleteApiV3OpenOrders = <ThrowOnError extends boolean = false>(options: Options<DeleteApiV3OpenOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiV3OpenOrdersResponse, DeleteApiV3OpenOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/openOrders',
        ...options
    });
};

/**
 * Current Open Orders (USER_DATA)
 * Get all open orders on a symbol. Careful when accessing this with no symbol.
 *
 * Weight(IP):
 * - `6` for a single symbol;
 * - `80` when the symbol parameter is omitted;
 */
export const getApiV3OpenOrders = <ThrowOnError extends boolean = false>(options: Options<GetApiV3OpenOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3OpenOrdersResponse, GetApiV3OpenOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/openOrders',
        ...options
    });
};

/**
 * All Orders (USER_DATA)
 * Get all account orders; active, canceled, or filled..
 *
 * - If `orderId` is set, it will get orders >= that `orderId`. Otherwise most recent orders are returned.
 * - For some historical orders `cummulativeQuoteQty` will be < 0, meaning the data is not available at this time.
 * - If `startTime` and/or `endTime` provided, `orderId` is not required
 *
 * Weight(IP): 20
 */
export const getApiV3AllOrders = <ThrowOnError extends boolean = false>(options: Options<GetApiV3AllOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3AllOrdersResponse, GetApiV3AllOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/allOrders',
        ...options
    });
};

/**
 * New Order list - OCO (TRADE)
 * Send in an one-cancels-the-other (OCO) pair, where activation of one order immediately cancels the other.
 *
 * - An `OCO` has 2 orders called the above order and below order.
 * - One of the orders must be a `LIMIT_MAKER` order and the other must be `STOP_LOSS` or`STOP_LOSS_LIMIT` order.
 * - Price restrictions:
 * - If the `OCO` is on the `SELL` side: `LIMIT_MAKER` price > Last Traded Price > stopPrice
 * - If the `OCO` is on the `BUY` side: `LIMIT_MAKER` price < Last Traded Price < stopPrice
 * - OCOs add 2 orders to the unfilled order count, `EXCHANGE_MAX_ORDERS` filter, and the `MAX_NUM_ORDERS` filter.
 *
 * Weight(IP): 1
 */
export const postApiV3OrderListOco = <ThrowOnError extends boolean = false>(options: Options<PostApiV3OrderListOcoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV3OrderListOcoResponse, PostApiV3OrderListOcoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/orderList/oco',
        ...options
    });
};

/**
 * New Order List - OTO (TRADE)
 * Places an `OTO`.
 * - An `OTO` (One-Triggers-the-Other) is an order list comprised of 2 orders.
 * - The first order is called the working order and must be `LIMIT` or `LIMIT_MAKER`. Initially, only the working order goes on the order book.
 * - The second order is called the pending order. It can be any order type except for `MARKET` orders using parameter `quoteOrderQty`. The pending order is only placed on the order book when the working order gets fully filled.
 * - If either the working order or the pending order is cancelled individually, the other order in the order list will also be canceled or expired.
 * - When the order list is placed, if the working order gets immediately fully filled, the placement response will show the working order as `FILLED` but the pending order will still appear as `PENDING_NEW`. You need to query the status of the pending order again to see its updated status.
 * - OTOs add 2 orders to the unfilled order count, `EXCHANGE_MAX_NUM_ORDERS` filter and `MAX_NUM_ORDERS` filter.
 *
 * Weight: 1
 */
export const postApiV3OrderListOto = <ThrowOnError extends boolean = false>(options: Options<PostApiV3OrderListOtoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV3OrderListOtoResponse, PostApiV3OrderListOtoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/orderList/oto',
        ...options
    });
};

/**
 * New Order List - OTOCO (TRADE)
 * Place an `OTOCO`.
 * - An `OTOCO` (One-Triggers-One-Cancels-the-Other) is an order list comprised of 3 orders.
 * - The first order is called the working order and must be `LIMIT` or `LIMIT_MAKER`. Initially, only the working order goes on the order book.
 * - The behavior of the working order is the same as the `OTO`.
 * - `OTOCO` has 2 pending orders (pending above and pending below), forming an `OCO` pair. The pending orders are only placed on the order book when the working order gets fully filled.
 * - The rules of the pending above and pending below follow the same rules as the Order List `OCO`.
 * - OTOCOs add 3 orders against the unfilled order count, `EXCHANGE_MAX_NUM_ORDERS` filter, and `MAX_NUM_ORDERS` filter.
 *
 * Weight: 1
 */
export const postApiV3OrderListOtoco = <ThrowOnError extends boolean = false>(options: Options<PostApiV3OrderListOtocoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV3OrderListOtocoResponse, PostApiV3OrderListOtocoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/orderList/otoco',
        ...options
    });
};

/**
 * Cancel OCO (TRADE)
 * Cancel an entire Order List
 *
 * Canceling an individual leg will cancel the entire OCO
 *
 * Weight(IP): 1
 */
export const deleteApiV3OrderList = <ThrowOnError extends boolean = false>(options: Options<DeleteApiV3OrderListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiV3OrderListResponse, DeleteApiV3OrderListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/orderList',
        ...options
    });
};

/**
 * Query OCO (USER_DATA)
 * Retrieves a specific OCO based on provided optional parameters
 *
 * Weight(IP): 4
 */
export const getApiV3OrderList = <ThrowOnError extends boolean = false>(options: Options<GetApiV3OrderListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3OrderListResponse, GetApiV3OrderListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/orderList',
        ...options
    });
};

/**
 * Query all OCO (USER_DATA)
 * Retrieves all OCO based on provided optional parameters
 *
 * Weight(IP): 20
 */
export const getApiV3AllOrderList = <ThrowOnError extends boolean = false>(options: Options<GetApiV3AllOrderListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3AllOrderListResponse, GetApiV3AllOrderListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/allOrderList',
        ...options
    });
};

/**
 * Query Open OCO (USER_DATA)
 * Weight(IP): 6
 */
export const getApiV3OpenOrderList = <ThrowOnError extends boolean = false>(options: Options<GetApiV3OpenOrderListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3OpenOrderListResponse, GetApiV3OpenOrderListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/openOrderList',
        ...options
    });
};

/**
 * New order using SOR (TRADE)
 * Weight(IP): 6
 */
export const postApiV3SorOrder = <ThrowOnError extends boolean = false>(options: Options<PostApiV3SorOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV3SorOrderResponse, PostApiV3SorOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/sor/order',
        ...options
    });
};

/**
 * Test new order using SOR (TRADE)
 * Test new order creation and signature/recvWindow using smart order routing (SOR).
 * Creates and validates a new order but does not send it into the matching engine.
 *
 * Weight(IP):
 * - Without computeCommissionRates: `1`
 * - With computeCommissionRates: `20`
 */
export const postApiV3SorOrderTest = <ThrowOnError extends boolean = false>(options: Options<PostApiV3SorOrderTestData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiV3SorOrderTestResponse, PostApiV3SorOrderTestError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/sor/order/test',
        ...options
    });
};

/**
 * Account Information (USER_DATA)
 * Get current account information.
 *
 * Weight(IP): 20
 */
export const getApiV3Account = <ThrowOnError extends boolean = false>(options: Options<GetApiV3AccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3AccountResponse, GetApiV3AccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/account',
        ...options
    });
};

/**
 * Account Trade List (USER_DATA)
 * Get trades for a specific account and symbol.
 *
 * If `fromId` is set, it will get id >= that `fromId`. Otherwise most recent orders are returned.
 *
 * The time between startTime and endTime can't be longer than 24 hours.
 * These are the supported combinations of all parameters:
 *
 * symbol
 *
 * symbol + orderId
 *
 * symbol + startTime
 *
 * symbol + endTime
 *
 * symbol + fromId
 *
 * symbol + startTime + endTime
 *
 * symbol+ orderId + fromId
 *
 * Weight(IP): 20
 */
export const getApiV3MyTrades = <ThrowOnError extends boolean = false>(options: Options<GetApiV3MyTradesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3MyTradesResponse, GetApiV3MyTradesError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/myTrades',
        ...options
    });
};

/**
 * Query Current Order Count Usage (TRADE)
 * Displays the user's current order count usage for all intervals.
 *
 * Weight(IP): 40
 */
export const getApiV3RateLimitOrder = <ThrowOnError extends boolean = false>(options: Options<GetApiV3RateLimitOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3RateLimitOrderResponse, GetApiV3RateLimitOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/rateLimit/order',
        ...options
    });
};

/**
 * Query Prevented Matches
 * Displays the list of orders that were expired because of STP.
 *
 * For additional information on what a Prevented match is, as well as Self Trade Prevention (STP), please refer to our STP FAQ page.
 *
 * These are the combinations supported:
 *
 * * symbol + preventedMatchId
 * * symbol + orderId
 * * symbol + orderId + fromPreventedMatchId (limit will default to 500)
 * * symbol + orderId + fromPreventedMatchId + limit
 *
 * Weight(IP):
 *
 * Case 	                          Weight
 * If symbol is invalid: 	        2
 * Querying by preventedMatchId: 	2
 * Querying by orderId: 	          20
 */
export const getApiV3MyPreventedMatches = <ThrowOnError extends boolean = false>(options: Options<GetApiV3MyPreventedMatchesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3MyPreventedMatchesResponse, GetApiV3MyPreventedMatchesError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/myPreventedMatches',
        ...options
    });
};

/**
 * Query Allocations (USER_DATA)
 * Retrieves allocations resulting from SOR order placement.
 *
 * Weight: 20
 *
 * Supported parameter combinations:
 * Parameters 	                          Response
 * symbol 	                              allocations from oldest to newest
 * symbol + startTime 	                  oldest allocations since startTime
 * symbol + endTime 	                    newest allocations until endTime
 * symbol + startTime + endTime 	        allocations within the time range
 * symbol + fromAllocationId 	          allocations by allocation ID
 * symbol + orderId 	                    allocations related to an order starting with oldest
 * symbol + orderId + fromAllocationId 	allocations related to an order by allocation ID
 *
 * Note: The time between startTime and endTime can't be longer than 24 hours.
 */
export const getApiV3MyAllocations = <ThrowOnError extends boolean = false>(options: Options<GetApiV3MyAllocationsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3MyAllocationsResponse, GetApiV3MyAllocationsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/myAllocations',
        ...options
    });
};

/**
 * Query Commission Rates (USER_DATA)
 * Get current account commission rates.
 *
 * Weight: 20
 */
export const getApiV3AccountCommission = <ThrowOnError extends boolean = false>(options: Options<GetApiV3AccountCommissionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV3AccountCommissionResponse, GetApiV3AccountCommissionError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/account/commission',
        ...options
    });
};

/**
 * Query borrow/repay records in Margin account(USER_DATA)
 * Query borrow/repay records in Margin account
 *
 * - txId or startTime must be sent. txId takes precedence. Response in descending order
 * - If an asset is sent, data within 30 days before endTime; If an asset is not sent, data within 7 days before endTime
 * - If neither startTime nor endTime is sent, the recent 7-day data will be returned.
 * - startTime set as endTime - 7 days by default, endTime set as current time by default
 *
 * Weight(IP): 10
 */
export const getSapiV1MarginBorrowRepay = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginBorrowRepayData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginBorrowRepayResponse, GetSapiV1MarginBorrowRepayError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/borrow-repay',
        ...options
    });
};

/**
 * Margin account borrow/repay(MARGIN)
 * Margin account borrow/repay(MARGIN)
 *
 * Weight(UID): 3000
 */
export const postSapiV1MarginBorrowRepay = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MarginBorrowRepayData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MarginBorrowRepayResponse, PostSapiV1MarginBorrowRepayError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/borrow-repay',
        ...options
    });
};

/**
 * Get Cross Margin Transfer History (USER_DATA)
 * - Response in descending order
 * - Returns data for last 7 days by default
 * - Set `archived` to `true` to query data from 6 months ago
 *
 * Weight(IP): 1
 */
export const getSapiV1MarginTransfer = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginTransferResponse, GetSapiV1MarginTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/transfer',
        ...options
    });
};

/**
 * Get All Margin Assets (MARKET_DATA)
 * Weight(IP): 1
 */
export const getSapiV1MarginAllAssets = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginAllAssetsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginAllAssetsResponse, GetSapiV1MarginAllAssetsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/allAssets',
        ...options
    });
};

/**
 * Get All Cross Margin Pairs (MARKET_DATA)
 * Weight(IP): 1
 */
export const getSapiV1MarginAllPairs = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginAllPairsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginAllPairsResponse, GetSapiV1MarginAllPairsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/allPairs',
        ...options
    });
};

/**
 * Query Margin PriceIndex (MARKET_DATA)
 * Weight(IP): 10
 */
export const getSapiV1MarginPriceIndex = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginPriceIndexData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginPriceIndexResponse, GetSapiV1MarginPriceIndexError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/priceIndex',
        ...options
    });
};

/**
 * Margin Account Cancel Order (TRADE)
 * Cancel an active order for margin account.
 *
 * Either `orderId` or `origClientOrderId` must be sent.
 *
 * Weight(IP): 10
 */
export const deleteSapiV1MarginOrder = <ThrowOnError extends boolean = false>(options: Options<DeleteSapiV1MarginOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSapiV1MarginOrderResponse, DeleteSapiV1MarginOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/order',
        ...options
    });
};

/**
 * Query Margin Account's Order (USER_DATA)
 * - Either `orderId` or `origClientOrderId` must be sent.
 * - For some historical orders `cummulativeQuoteQty` will be < 0, meaning the data is not available at this time.
 *
 * Weight(IP): 10
 */
export const getSapiV1MarginOrder = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginOrderResponse, GetSapiV1MarginOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/order',
        ...options
    });
};

/**
 * Margin Account New Order (TRADE)
 * Post a new order for margin account.
 *
 * Weight(UID): 6
 */
export const postSapiV1MarginOrder = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MarginOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MarginOrderResponse, PostSapiV1MarginOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/order',
        ...options
    });
};

/**
 * Get Interest History (USER_DATA)
 * - Response in descending order
 * - If `isolatedSymbol` is not sent, crossed margin data will be returned
 * - Set `archived` to `true` to query data from 6 months ago
 * - `type` in response has 4 enums:
 * - `PERIODIC` interest charged per hour
 * - `ON_BORROW` first interest charged on borrow
 * - `PERIODIC_CONVERTED` interest charged per hour converted into BNB
 * - `ON_BORROW_CONVERTED` first interest charged on borrow converted into BNB
 *
 * Weight(IP): 1
 */
export const getSapiV1MarginInterestHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginInterestHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginInterestHistoryResponse, GetSapiV1MarginInterestHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/interestHistory',
        ...options
    });
};

/**
 * Get Force Liquidation Record (USER_DATA)
 * - Response in descending order
 *
 * Weight(IP): 1
 */
export const getSapiV1MarginForceLiquidationRec = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginForceLiquidationRecData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginForceLiquidationRecResponse, GetSapiV1MarginForceLiquidationRecError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/forceLiquidationRec',
        ...options
    });
};

/**
 * Query Cross Margin Account Details (USER_DATA)
 * Weight(IP): 10
 */
export const getSapiV1MarginAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginAccountResponse, GetSapiV1MarginAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/account',
        ...options
    });
};

/**
 * Margin Account Cancel all Open Orders on a Symbol (TRADE)
 * - Cancels all active orders on a symbol for margin account.
 * - This includes OCO orders.
 *
 * Weight(IP): 1
 *
 */
export const deleteSapiV1MarginOpenOrders = <ThrowOnError extends boolean = false>(options: Options<DeleteSapiV1MarginOpenOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSapiV1MarginOpenOrdersResponse, DeleteSapiV1MarginOpenOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/openOrders',
        ...options
    });
};

/**
 * Query Margin Account's Open Orders (USER_DATA)
 * - If the `symbol` is not sent, orders for all symbols will be returned in an array.
 * - When all symbols are returned, the number of requests counted against the rate limiter is equal to the number of symbols currently trading on the exchange
 * - If isIsolated ="TRUE", symbol must be sent.
 *
 * Weight(IP): 10
 */
export const getSapiV1MarginOpenOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginOpenOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginOpenOrdersResponse, GetSapiV1MarginOpenOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/openOrders',
        ...options
    });
};

/**
 * Query Margin Account's All Orders (USER_DATA)
 * - If `orderId` is set, it will get orders >= that orderId. Otherwise most recent orders are returned.
 * - For some historical orders `cummulativeQuoteQty` will be < 0, meaning the data is not available at this time.
 *
 * Weight(IP): 200
 *
 * Request Limit: 60 times/min per IP
 */
export const getSapiV1MarginAllOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginAllOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginAllOrdersResponse, GetSapiV1MarginAllOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/allOrders',
        ...options
    });
};

/**
 * Margin Account New OCO (TRADE)
 * Send in a new OCO for a margin account
 *
 * - Price Restrictions:
 * - SELL: Limit Price > Last Price > Stop Price
 * - BUY: Limit Price < Last Price < Stop Price
 * - Quantity Restrictions:
 * - Both legs must have the same quantity
 * - ICEBERG quantities however do not have to be the same.
 * - Order Rate Limit
 * - OCO counts as 2 orders against the order rate limit.
 *
 * Weight(UID): 6
 */
export const postSapiV1MarginOrderOco = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MarginOrderOcoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MarginOrderOcoResponse, PostSapiV1MarginOrderOcoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/order/oco',
        ...options
    });
};

/**
 * Margin Account Cancel OCO (TRADE)
 * Cancel an entire Order List for a margin account
 *
 * - Canceling an individual leg will cancel the entire OCO
 * - Either `orderListId` or `listClientOrderId` must be provided
 *
 * Weight(UID): 1
 */
export const deleteSapiV1MarginOrderList = <ThrowOnError extends boolean = false>(options: Options<DeleteSapiV1MarginOrderListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSapiV1MarginOrderListResponse, DeleteSapiV1MarginOrderListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/orderList',
        ...options
    });
};

/**
 * Query Margin Account's OCO (USER_DATA)
 * Retrieves a specific OCO based on provided optional parameters
 *
 * - Either `orderListId` or `origClientOrderId` must be provided
 *
 * Weight(IP): 10
 */
export const getSapiV1MarginOrderList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginOrderListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginOrderListResponse, GetSapiV1MarginOrderListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/orderList',
        ...options
    });
};

/**
 * Query Margin Account's all OCO (USER_DATA)
 * Retrieves all OCO for a specific margin account based on provided optional parameters
 *
 * Weight(IP): 200
 */
export const getSapiV1MarginAllOrderList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginAllOrderListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginAllOrderListResponse, GetSapiV1MarginAllOrderListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/allOrderList',
        ...options
    });
};

/**
 * Query Margin Account's Open OCO (USER_DATA)
 * Weight(IP): 10
 */
export const getSapiV1MarginOpenOrderList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginOpenOrderListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginOpenOrderListResponse, GetSapiV1MarginOpenOrderListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/openOrderList',
        ...options
    });
};

/**
 * Query Margin Account's Trade List (USER_DATA)
 * - If `fromId` is set, it will get orders >= that `fromId`. Otherwise most recent trades are returned.
 *
 * Weight(IP): 10
 */
export const getSapiV1MarginMyTrades = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginMyTradesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginMyTradesResponse, GetSapiV1MarginMyTradesError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/myTrades',
        ...options
    });
};

/**
 * Query Max Borrow (USER_DATA)
 * - If `isolatedSymbol` is not sent, crossed margin data will be sent.
 * - `borrowLimit` is also available from https://www.binance.com/en/margin-fee
 *
 * Weight(IP): 50
 */
export const getSapiV1MarginMaxBorrowable = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginMaxBorrowableData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginMaxBorrowableResponse, GetSapiV1MarginMaxBorrowableError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/maxBorrowable',
        ...options
    });
};

/**
 * Query Max Transfer-Out Amount (USER_DATA)
 * - If `isolatedSymbol` is not sent, crossed margin data will be sent.
 *
 * Weight(IP): 50
 */
export const getSapiV1MarginMaxTransferable = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginMaxTransferableData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginMaxTransferableResponse, GetSapiV1MarginMaxTransferableError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/maxTransferable',
        ...options
    });
};

/**
 * Get Summary of Margin account (USER_DATA)
 * Get personal margin level information
 *
 * Weight(IP): 10
 */
export const getSapiV1MarginTradeCoeff = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginTradeCoeffData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginTradeCoeffResponse, GetSapiV1MarginTradeCoeffError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/tradeCoeff',
        ...options
    });
};

/**
 * Disable Isolated Margin Account (TRADE)
 * Disable isolated margin account for a specific symbol. Each trading pair can only be deactivated once every 24 hours .
 *
 * Weight(UID): 300
 */
export const deleteSapiV1MarginIsolatedAccount = <ThrowOnError extends boolean = false>(options: Options<DeleteSapiV1MarginIsolatedAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSapiV1MarginIsolatedAccountResponse, DeleteSapiV1MarginIsolatedAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/isolated/account',
        ...options
    });
};

/**
 * Query Isolated Margin Account Info (USER_DATA)
 * - If "symbols" is not sent, all isolated assets will be returned.
 * - If "symbols" is sent, only the isolated assets of the sent symbols will be returned.
 *
 * Weight(IP): 10
 */
export const getSapiV1MarginIsolatedAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginIsolatedAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginIsolatedAccountResponse, GetSapiV1MarginIsolatedAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/isolated/account',
        ...options
    });
};

/**
 * Enable Isolated Margin Account (TRADE)
 * Enable isolated margin account for a specific symbol.
 *
 * Weight(UID): 300
 */
export const postSapiV1MarginIsolatedAccount = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MarginIsolatedAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MarginIsolatedAccountResponse, PostSapiV1MarginIsolatedAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/isolated/account',
        ...options
    });
};

/**
 * Query Enabled Isolated Margin Account Limit (USER_DATA)
 * Query enabled isolated margin account limit.
 *
 * Weight(IP): 1
 */
export const getSapiV1MarginIsolatedAccountLimit = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginIsolatedAccountLimitData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginIsolatedAccountLimitResponse, GetSapiV1MarginIsolatedAccountLimitError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/isolated/accountLimit',
        ...options
    });
};

/**
 * Get All Isolated Margin Symbol(USER_DATA)
 * Weight(IP): 10
 */
export const getSapiV1MarginIsolatedAllPairs = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginIsolatedAllPairsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginIsolatedAllPairsResponse, GetSapiV1MarginIsolatedAllPairsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/isolated/allPairs',
        ...options
    });
};

/**
 * Get BNB Burn Status(USER_DATA)
 * Weight(IP): 1
 */
export const getSapiV1BnbBurn = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1BnbBurnData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1BnbBurnResponse, GetSapiV1BnbBurnError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/bnbBurn',
        ...options
    });
};

/**
 * Toggle BNB Burn On Spot Trade And Margin Interest (USER_DATA)
 * - "spotBNBBurn" and "interestBNBBurn" should be sent at least one.
 *
 * Weight(IP): 1
 */
export const postSapiV1BnbBurn = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1BnbBurnData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1BnbBurnResponse, PostSapiV1BnbBurnError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/bnbBurn',
        ...options
    });
};

/**
 * Margin Interest Rate History (USER_DATA)
 * The max interval between startTime and endTime is 30 days.
 *
 * Weight(IP): 1
 */
export const getSapiV1MarginInterestRateHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginInterestRateHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginInterestRateHistoryResponse, GetSapiV1MarginInterestRateHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/interestRateHistory',
        ...options
    });
};

/**
 * Query Cross Margin Fee Data (USER_DATA)
 * Get cross margin fee data collection with any vip level or user's current specific data as https://www.binance.com/en/margin-fee
 *
 * Weight(IP): 1 when coin is specified; 5 when the coin parameter is omitted
 */
export const getSapiV1MarginCrossMarginData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginCrossMarginDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginCrossMarginDataResponse, GetSapiV1MarginCrossMarginDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/crossMarginData',
        ...options
    });
};

/**
 * Query Isolated Margin Fee Data (USER_DATA)
 * Get isolated margin fee data collection with any vip level or user's current specific data as https://www.binance.com/en/margin-fee
 *
 * Weight(IP): 1 when a single is specified; 10 when the symbol parameter is omitted
 */
export const getSapiV1MarginIsolatedMarginData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginIsolatedMarginDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginIsolatedMarginDataResponse, GetSapiV1MarginIsolatedMarginDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/isolatedMarginData',
        ...options
    });
};

/**
 * Query Isolated Margin Tier Data (USER_DATA)
 * Get isolated margin tier data collection with any tier as https://www.binance.com/en/margin-data
 *
 * Weight(IP): 1
 */
export const getSapiV1MarginIsolatedMarginTier = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginIsolatedMarginTierData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginIsolatedMarginTierResponse, GetSapiV1MarginIsolatedMarginTierError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/isolatedMarginTier',
        ...options
    });
};

/**
 * Query Current Margin Order Count Usage (TRADE)
 * Displays the user's current margin order count usage for all intervals.
 *
 * Weight(IP): 20
 */
export const getSapiV1MarginRateLimitOrder = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginRateLimitOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginRateLimitOrderResponse, GetSapiV1MarginRateLimitOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/rateLimit/order',
        ...options
    });
};

/**
 * Cross margin collateral ratio (MARKET_DATA)
 *
 * Weight(IP): 100
 */
export const getSapiV1MarginCrossMarginCollateralRatio = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1MarginCrossMarginCollateralRatioData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1MarginCrossMarginCollateralRatioResponse, GetSapiV1MarginCrossMarginCollateralRatioError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/crossMarginCollateralRatio',
        ...options
    });
};

/**
 * Get Small Liability Exchange Coin List (USER_DATA)
 * Query the coins which can be small liability exchange
 *
 * Weight(UID): 100
 */
export const getSapiV1MarginExchangeSmallLiability = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginExchangeSmallLiabilityData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginExchangeSmallLiabilityResponse, GetSapiV1MarginExchangeSmallLiabilityError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/exchange-small-liability',
        ...options
    });
};

/**
 * Get Small Liability Exchange History (USER_DATA)
 * Get Small liability Exchange History
 *
 * Weight(UID): 100
 */
export const getSapiV1MarginExchangeSmallLiabilityHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginExchangeSmallLiabilityHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginExchangeSmallLiabilityHistoryResponse, GetSapiV1MarginExchangeSmallLiabilityHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/exchange-small-liability-history',
        ...options
    });
};

/**
 * Get a future hourly interest rate (USER_DATA)
 * Get user the next hourly estimate interest
 *
 * Weight(UID): 100
 */
export const getSapiV1MarginNextHourlyInterestRate = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginNextHourlyInterestRateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginNextHourlyInterestRateResponse, GetSapiV1MarginNextHourlyInterestRateError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/next-hourly-interest-rate',
        ...options
    });
};

/**
 * Get cross or isolated margin capital flow(USER_DATA)
 * Get cross or isolated margin capital flow
 *
 * Weight(IP): 100
 */
export const getSapiV1MarginCapitalFlow = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginCapitalFlowData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginCapitalFlowResponse, GetSapiV1MarginCapitalFlowError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/capital-flow',
        ...options
    });
};

/**
 * Get tokens or symbols delist schedule for cross margin and isolated margin (MARKET_DATA)
 * Get tokens or symbols delist schedule for cross margin and isolated margin
 *
 * Weight(IP): 100
 */
export const getSapiV1MarginDelistSchedule = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginDelistScheduleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginDelistScheduleResponse, GetSapiV1MarginDelistScheduleError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/delist-schedule',
        ...options
    });
};

/**
 * Query Margin Available Inventory (USER_DATA)
 * Margin available Inventory query
 *
 * Weight(UID): 50
 */
export const getSapiV1MarginAvailableInventory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MarginAvailableInventoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MarginAvailableInventoryResponse, GetSapiV1MarginAvailableInventoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/available-inventory',
        ...options
    });
};

/**
 * Margin manual liquidation(MARGIN)
 * Margin manual liquidation
 *
 * Weight(UID): 3000
 */
export const postSapiV1MarginManualLiquidation = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MarginManualLiquidationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MarginManualLiquidationResponse, PostSapiV1MarginManualLiquidationError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/manual-liquidation',
        ...options
    });
};

/**
 * Margin Account New OTO (TRADE)
 * Post a new `OTO` order for margin account:
 * - An `OTO` (One-Triggers-the-Other) is an order list comprised of 2 orders
 * - The first order is called the working order and must be `LIMIT` or `LIMIT_MAKER`. Initially, only the working order goes on the order book.
 * - The second order is called the pending order. It can be any order type except for `MARKET` orders using parameter `quoteOrderQty`. The pending order is only placed on the order book when the working order gets fully filled.
 * - If either the working order or the pending order is cancelled individually, the other order in the order list will also be canceled or expired.
 * - When the order list is placed, if the working order gets immediately fully filled, the placement response will show the working order as `FILLED` but the pending order will still appear as `PENDING_NEW`. You need to query the status of the pending order again to see its updated status.
 * - OTOs add 2 orders to the unfilled order count, `EXCHANGE_MAX_NUM_ORDERS` filter and `MAX_NUM_ORDERS` filter.
 *
 * Weight(UID): 6
 */
export const postSapiV1MarginOrderOto = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MarginOrderOtoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MarginOrderOtoResponse, PostSapiV1MarginOrderOtoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/order/oto',
        ...options
    });
};

/**
 * Margin Account New OTOCO (TRADE)
 * Post a new `OTOCO` order for margin account:
 * - An `OTOCO` (One-Triggers-the-Other-Cancel-the-Other) is an order list comprised of 3 orders
 * - The first order is called the working order and must be `LIMIT` or `LIMIT_MAKER`. Initially, only the working order goes on the order book.
 * - The behavior of the working order is the same as the `OTO`.
 * - `OTOCO` has 2 pending orders (pending above and pending below), forming an `OCO` pair. The pending orders are only placed on the order book when the working order gets fully filled.
 * - The rules of the pending above and pending below follow the same rules as the Order List `OCO`.
 * - OTOCOs add 3 orders to the unfilled order count, `EXCHANGE_MAX_NUM_ORDERS` filter and `MAX_NUM_ORDERS` filter.
 *
 * Weight(UID): 6
 */
export const postSapiV1MarginOrderOtoco = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MarginOrderOtocoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MarginOrderOtocoResponse, PostSapiV1MarginOrderOtocoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/order/otoco',
        ...options
    });
};

/**
 * Adjust cross margin max leverage (USER_DATA)
 * Adjust cross margin max leverage
 *
 * Weight(UID): 3000
 */
export const postSapiV1MarginMaxLeverage = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MarginMaxLeverageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MarginMaxLeverageResponse, PostSapiV1MarginMaxLeverageError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/max-leverage',
        ...options
    });
};

/**
 * Query Liability Coin Leverage Bracket in Cross Margin Pro Mode (MARKET_DATA)
 * Liability Coin Leverage Bracket in Cross Margin Pro Mode
 *
 * Weight(IP): 1
 */
export const getSapiV1MarginLeverageBracket = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1MarginLeverageBracketData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1MarginLeverageBracketResponse, GetSapiV1MarginLeverageBracketError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/margin/leverageBracket',
        ...options
    });
};

/**
 * System Status (System)
 * Fetch system status.
 *
 * Weight(IP): 1
 */
export const getSapiV1SystemStatus = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1SystemStatusData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1SystemStatusResponse, unknown, ThrowOnError>({
        url: '/sapi/v1/system/status',
        ...options
    });
};

/**
 * All Coins' Information (USER_DATA)
 * Get information of coins (available for deposit and withdraw) for user.
 *
 * Weight(IP): 10
 */
export const getSapiV1CapitalConfigGetall = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CapitalConfigGetallData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CapitalConfigGetallResponse, GetSapiV1CapitalConfigGetallError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/config/getall',
        ...options
    });
};

/**
 * Daily Account Snapshot (USER_DATA)
 * - The query time period must be less than 30 days
 * - Support query within the last one month only
 * - If startTimeand endTime not sent, return records of the last 7 days by default
 *
 * Weight(IP): 2400
 */
export const getSapiV1AccountSnapshot = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AccountSnapshotData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AccountSnapshotResponse, GetSapiV1AccountSnapshotError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/accountSnapshot',
        ...options
    });
};

/**
 * Disable Fast Withdraw Switch (USER_DATA)
 * - This request will disable fastwithdraw switch under your account.
 * - You need to enable "trade" option for the api key which requests this endpoint.
 *
 * Weight(IP): 1
 */
export const postSapiV1AccountDisableFastWithdrawSwitch = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AccountDisableFastWithdrawSwitchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AccountDisableFastWithdrawSwitchResponse, PostSapiV1AccountDisableFastWithdrawSwitchError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/account/disableFastWithdrawSwitch',
        ...options
    });
};

/**
 * Enable Fast Withdraw Switch (USER_DATA)
 * - This request will enable fastwithdraw switch under your account. You need to enable "trade" option for the api key which requests this endpoint.
 * - When Fast Withdraw Switch is on, transferring funds to a Binance account will be done instantly. There is no on-chain transaction, no transaction ID and no withdrawal fee.
 *
 * Weight(IP): 1
 */
export const postSapiV1AccountEnableFastWithdrawSwitch = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AccountEnableFastWithdrawSwitchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AccountEnableFastWithdrawSwitchResponse, PostSapiV1AccountEnableFastWithdrawSwitchError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/account/enableFastWithdrawSwitch',
        ...options
    });
};

/**
 * Withdraw (USER_DATA)
 * Submit a withdraw request.
 *
 * - If `network` not send, return with default network of the coin.
 * - You can get `network` and `isDefault` in `networkList` of a coin in the response of `Get /sapi/v1/capital/config/getall (HMAC SHA256)`.
 *
 * Weight(IP): 1
 */
export const postSapiV1CapitalWithdrawApply = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1CapitalWithdrawApplyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1CapitalWithdrawApplyResponse, PostSapiV1CapitalWithdrawApplyError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/withdraw/apply',
        ...options
    });
};

/**
 * Deposit History(supporting network) (USER_DATA)
 * Fetch deposit history.
 *
 * - Please notice the default `startTime` and `endTime` to make sure that time interval is within 0-90 days.
 * - If both `startTime` and `endTime` are sent, time between `startTime` and `endTime` must be less than 90 days.
 *
 * Weight(IP): 1
 */
export const getSapiV1CapitalDepositHisrec = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CapitalDepositHisrecData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CapitalDepositHisrecResponse, GetSapiV1CapitalDepositHisrecError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/deposit/hisrec',
        ...options
    });
};

/**
 * Withdraw History (supporting network) (USER_DATA)
 * Fetch withdraw history.
 *
 * This endpoint specifically uses per second UID rate limit, user's total second level IP rate limit is 180000/second. Response from the endpoint contains header key X-SAPI-USED-UID-WEIGHT-1S, which defines weight used by the current IP.
 *
 * - `network` may not be in the response for old withdraw.
 * - Please notice the default `startTime` and `endTime` to make sure that time interval is within 0-90 days.
 * - If both `startTime` and `endTime` are sent, time between `startTime` and `endTime` must be less than 90 days
 * - If withdrawOrderId is sent, time between startTime and endTime must be less than 7 days.
 * - If withdrawOrderId is sent, startTime and endTime are not sent, will return last 7 days records by default.
 *
 * Weight(UID): 18000
 * Request Limit: 10 requests per second
 */
export const getSapiV1CapitalWithdrawHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CapitalWithdrawHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CapitalWithdrawHistoryResponse, GetSapiV1CapitalWithdrawHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/withdraw/history',
        ...options
    });
};

/**
 * Deposit Address (supporting network) (USER_DATA)
 * Fetch deposit address with network.
 *
 * - If network is not send, return with default network of the coin.
 * - You can get network and isDefault in networkList in the response of Get /sapi/v1/capital/config/getall (HMAC SHA256).
 *
 * Weight(IP): 10
 */
export const getSapiV1CapitalDepositAddress = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CapitalDepositAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CapitalDepositAddressResponse, GetSapiV1CapitalDepositAddressError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/deposit/address',
        ...options
    });
};

/**
 * Account Status (USER_DATA)
 * Fetch account status detail.
 *
 * Weight(IP): 1
 */
export const getSapiV1AccountStatus = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AccountStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AccountStatusResponse, GetSapiV1AccountStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/account/status',
        ...options
    });
};

/**
 * Account API Trading Status (USER_DATA)
 * Fetch account API trading status with details.
 *
 * Weight(IP): 1
 */
export const getSapiV1AccountApiTradingStatus = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AccountApiTradingStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AccountApiTradingStatusResponse, GetSapiV1AccountApiTradingStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/account/apiTradingStatus',
        ...options
    });
};

/**
 * DustLog(USER_DATA)
 * Weight(IP): 1
 */
export const getSapiV1AssetDribblet = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetDribbletData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetDribbletResponse, GetSapiV1AssetDribbletError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/dribblet',
        ...options
    });
};

/**
 * Get Assets That Can Be Converted Into BNB (USER_DATA)
 * Weight(IP): 1
 */
export const postSapiV1AssetDustBtc = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AssetDustBtcData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AssetDustBtcResponse, PostSapiV1AssetDustBtcError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/dust-btc',
        ...options
    });
};

/**
 * Dust Transfer (USER_DATA)
 * Convert dust assets to BNB.
 *
 * Weight(UID): 10
 */
export const postSapiV1AssetDust = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AssetDustData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AssetDustResponse, PostSapiV1AssetDustError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/dust',
        ...options
    });
};

/**
 * Asset Dividend Record (USER_DATA)
 * Query asset Dividend Record
 *
 * Weight(IP): 10
 */
export const getSapiV1AssetAssetDividend = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetAssetDividendData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetAssetDividendResponse, GetSapiV1AssetAssetDividendError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/assetDividend',
        ...options
    });
};

/**
 * Asset Detail (USER_DATA)
 * Fetch details of assets supported on Binance.
 *
 * - Please get network and other deposit or withdraw details from `GET /sapi/v1/capital/config/getall`.
 *
 * Weight(IP): 1
 */
export const getSapiV1AssetAssetDetail = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetAssetDetailData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetAssetDetailResponse, GetSapiV1AssetAssetDetailError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/assetDetail',
        ...options
    });
};

/**
 * Trade Fee (USER_DATA)
 * Fetch trade fee
 *
 * Weight(IP): 1
 */
export const getSapiV1AssetTradeFee = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetTradeFeeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetTradeFeeResponse, GetSapiV1AssetTradeFeeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/tradeFee',
        ...options
    });
};

/**
 * Query User Universal Transfer History (USER_DATA)
 * - `fromSymbol` must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
 * - `toSymbol` must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
 * - Support query within the last 6 months only
 * - If `startTime` and `endTime` not sent, return records of the last 7 days by default
 *
 * Weight(IP): 1
 */
export const getSapiV1AssetTransfer = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetTransferResponse, GetSapiV1AssetTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/transfer',
        ...options
    });
};

/**
 * User Universal Transfer (USER_DATA)
 * You need to enable `Permits Universal Transfer` option for the api key which requests this endpoint.
 *
 * - `fromSymbol` must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
 * - `toSymbol` must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
 *
 * ENUM of transfer types:
 * - MAIN_UMFUTURE Spot account transfer to USDⓈ-M Futures account
 * - MAIN_CMFUTURE Spot account transfer to COIN-M Futures account
 * - MAIN_MARGIN Spot account transfer to Margin(cross)account
 * - UMFUTURE_MAIN USDⓈ-M Futures account transfer to Spot account
 * - UMFUTURE_MARGIN USDⓈ-M Futures account transfer to Margin(cross)account
 * - CMFUTURE_MAIN COIN-M Futures account transfer to Spot account
 * - CMFUTURE_MARGIN COIN-M Futures account transfer to Margin(cross) account
 * - MARGIN_MAIN Margin(cross)account transfer to Spot account
 * - MARGIN_UMFUTURE Margin(cross)account transfer to USDⓈ-M Futures
 * - MARGIN_CMFUTURE Margin(cross)account transfer to COIN-M Futures
 * - ISOLATEDMARGIN_MARGIN Isolated margin account transfer to Margin(cross) account
 * - MARGIN_ISOLATEDMARGIN Margin(cross) account transfer to Isolated margin account
 * - ISOLATEDMARGIN_ISOLATEDMARGIN Isolated margin account transfer to Isolated margin account
 * - MAIN_FUNDING Spot account transfer to Funding account
 * - FUNDING_MAIN Funding account transfer to Spot account
 * - FUNDING_UMFUTURE Funding account transfer to UMFUTURE account
 * - UMFUTURE_FUNDING UMFUTURE account transfer to Funding account
 * - MARGIN_FUNDING MARGIN account transfer to Funding account
 * - FUNDING_MARGIN Funding account transfer to Margin account
 * - FUNDING_CMFUTURE Funding account transfer to CMFUTURE account
 * - CMFUTURE_FUNDING CMFUTURE account transfer to Funding account
 * - MAIN_OPTION Spot account transfer to Options account
 * - OPTION_MAIN Options account transfer to Spot account
 * - UMFUTURE_OPTION USDⓈ-M Futures account transfer to Options account
 * - OPTION_UMFUTURE Options account transfer to USDⓈ-M Futures account
 * - MARGIN_OPTION Margin(cross)account transfer to Options account
 * - OPTION_MARGIN Options account transfer to Margin(cross)account
 * - FUNDING_OPTION Funding account transfer to Options account
 * - OPTION_FUNDING Options account transfer to Funding account
 * - MAIN_PORTFOLIO_MARGIN Spot account transfer to Portfolio Margin account
 * - PORTFOLIO_MARGIN_MAIN Portfolio Margin account transfer to Spot account
 * - MAIN_ISOLATED_MARGIN Spot account transfer to Isolated margin account
 * - ISOLATED_MARGIN_MAIN Isolated margin account transfer to Spot account
 *
 * Weight(IP): 1
 */
export const postSapiV1AssetTransfer = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AssetTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AssetTransferResponse, PostSapiV1AssetTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/transfer',
        ...options
    });
};

/**
 * Funding Wallet (USER_DATA)
 * - Currently supports querying the following business assets：Binance Pay, Binance Card, Binance Gift Card, Stock Token
 *
 * Weight(IP): 1
 */
export const postSapiV1AssetGetFundingAsset = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AssetGetFundingAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AssetGetFundingAssetResponse, PostSapiV1AssetGetFundingAssetError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/get-funding-asset',
        ...options
    });
};

/**
 * User Asset (USER_DATA)
 * Get user assets, just for positive data.
 *
 * Weight(IP): 5
 */
export const postSapiV3AssetGetUserAsset = <ThrowOnError extends boolean = false>(options: Options<PostSapiV3AssetGetUserAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV3AssetGetUserAssetResponse, PostSapiV3AssetGetUserAssetError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v3/asset/getUserAsset',
        ...options
    });
};

/**
 * Convert Transfer (USER_DATA)
 * Convert transfer, convert between BUSD and stablecoins.
 * If the clientId has been used before, will not do the convert transfer, the original transfer will be returned.
 *
 * Weight(UID): 5
 */
export const postSapiV1AssetConvertTransfer = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AssetConvertTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AssetConvertTransferResponse, PostSapiV1AssetConvertTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/convert-transfer',
        ...options
    });
};

/**
 * Query Convert Transfer (USER_DATA)
 * Weight(UID): 5
 */
export const getSapiV1AssetConvertTransferQueryByPage = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetConvertTransferQueryByPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetConvertTransferQueryByPageResponse, GetSapiV1AssetConvertTransferQueryByPageError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/convert-transfer/queryByPage',
        ...options
    });
};

/**
 * Get Cloud-Mining payment and refund history (USER_DATA)
 * The query of Cloud-Mining payment and refund history
 *
 * Weight(UID): 600
 */
export const getSapiV1AssetLedgerTransferCloudMiningQueryByPage = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetLedgerTransferCloudMiningQueryByPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetLedgerTransferCloudMiningQueryByPageResponse, GetSapiV1AssetLedgerTransferCloudMiningQueryByPageError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/ledger-transfer/cloud-mining/queryByPage',
        ...options
    });
};

/**
 * Get API Key Permission (USER_DATA)
 * Weight(IP): 1
 */
export const getSapiV1AccountApiRestrictions = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AccountApiRestrictionsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AccountApiRestrictionsResponse, GetSapiV1AccountApiRestrictionsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/account/apiRestrictions',
        ...options
    });
};

/**
 * Query auto-converting stable coins (USER_DATA)
 * Get a user's auto-conversion settings in deposit/withdrawal
 *
 * Weight(UID): 600'
 */
export const getSapiV1CapitalContractConvertibleCoins = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1CapitalContractConvertibleCoinsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1CapitalContractConvertibleCoinsResponse, GetSapiV1CapitalContractConvertibleCoinsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/contract/convertible-coins',
        ...options
    });
};

/**
 * Switch on/off BUSD and stable coins conversion (USER_DATA) (USER_DATA)
 * User can use it to turn on or turn off the BUSD auto-conversion from/to a specific stable coin.
 *
 * Weight(UID): 600'
 */
export const postSapiV1CapitalContractConvertibleCoins = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1CapitalContractConvertibleCoinsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1CapitalContractConvertibleCoinsResponse, PostSapiV1CapitalContractConvertibleCoinsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/contract/convertible-coins',
        ...options
    });
};

/**
 * Create a Virtual Sub-account(For Master Account)
 * - This request will generate a virtual sub account under your master account.
 * - You need to enable "trade" option for the api key which requests this endpoint.
 *
 * Weight(IP): 1
 */
export const postSapiV1SubAccountVirtualSubAccount = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountVirtualSubAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountVirtualSubAccountResponse, PostSapiV1SubAccountVirtualSubAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/virtualSubAccount',
        ...options
    });
};

/**
 * Query Sub-account List (For Master Account)
 * Weight(IP): 1
 */
export const getSapiV1SubAccountList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountListResponse, GetSapiV1SubAccountListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/list',
        ...options
    });
};

/**
 * Sub-account Spot Asset Transfer History (For Master Account)
 * - fromEmail and toEmail cannot be sent at the same time.
 * - Return fromEmail equal master account email by default.
 *
 * Weight(IP): 1
 */
export const getSapiV1SubAccountSubTransferHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountSubTransferHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountSubTransferHistoryResponse, GetSapiV1SubAccountSubTransferHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/sub/transfer/history',
        ...options
    });
};

/**
 * Sub-account Futures Asset Transfer History (For Master Account)
 * Weight(IP): 1
 */
export const getSapiV1SubAccountFuturesInternalTransfer = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountFuturesInternalTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountFuturesInternalTransferResponse, GetSapiV1SubAccountFuturesInternalTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/futures/internalTransfer',
        ...options
    });
};

/**
 * Sub-account Futures Asset Transfer (For Master Account)
 * - Master account can transfer max 2000 times a minute
 *
 * Weight(IP): 1
 */
export const postSapiV1SubAccountFuturesInternalTransfer = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountFuturesInternalTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountFuturesInternalTransferResponse, PostSapiV1SubAccountFuturesInternalTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/futures/internalTransfer',
        ...options
    });
};

/**
 * Sub-account Assets (For Master Account)
 * Fetch sub-account assets
 *
 * Weight(IP): 1
 */
export const getSapiV3SubAccountAssets = <ThrowOnError extends boolean = false>(options: Options<GetSapiV3SubAccountAssetsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV3SubAccountAssetsResponse, GetSapiV3SubAccountAssetsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v3/sub-account/assets',
        ...options
    });
};

/**
 * Sub-account Spot Assets Summary (For Master Account)
 * Get BTC valued asset summary of subaccounts.
 *
 * Weight(IP): 1
 */
export const getSapiV1SubAccountSpotSummary = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountSpotSummaryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountSpotSummaryResponse, GetSapiV1SubAccountSpotSummaryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/spotSummary',
        ...options
    });
};

/**
 * Sub-account Spot Assets Summary (For Master Account)
 * Fetch sub-account deposit address
 *
 * Weight(IP): 1
 */
export const getSapiV1CapitalDepositSubAddress = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CapitalDepositSubAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CapitalDepositSubAddressResponse, GetSapiV1CapitalDepositSubAddressError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/deposit/subAddress',
        ...options
    });
};

/**
 * Sub-account Deposit History (For Master Account)
 * Fetch sub-account deposit history
 *
 * Weight(IP): 1
 */
export const getSapiV1CapitalDepositSubHisrec = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CapitalDepositSubHisrecData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CapitalDepositSubHisrecResponse, GetSapiV1CapitalDepositSubHisrecError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/deposit/subHisrec',
        ...options
    });
};

/**
 * One click arrival deposit apply (USER_DATA)
 * Apply deposit credit for expired address (One click arrival)
 *
 * Weight(IP): 1
 */
export const postSapiV1CapitalDepositCreditApply = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1CapitalDepositCreditApplyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1CapitalDepositCreditApplyResponse, PostSapiV1CapitalDepositCreditApplyError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/deposit/credit-apply',
        ...options
    });
};

/**
 * Query User Wallet Balance (USER_DATA)
 * Query User Wallet Balance
 *
 * Weight(IP): 60
 */
export const getSapiV1AssetWalletBalance = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetWalletBalanceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetWalletBalanceResponse, GetSapiV1AssetWalletBalanceError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/wallet/balance',
        ...options
    });
};

/**
 * Query User Delegation History(For Master Account) (USER_DATA)
 * Query User Delegation History
 *
 * Weight(IP): 60
 */
export const getSapiV1AssetCustodyTransferHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AssetCustodyTransferHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AssetCustodyTransferHistoryResponse, GetSapiV1AssetCustodyTransferHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/asset/custody/transfer-history',
        ...options
    });
};

/**
 * Fetch deposit address list with network (USER_DATA)
 * Fetch deposit address list with network.
 *
 * Weight(IP): 10
 */
export const getSapiV1CapitalDepositAddressList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CapitalDepositAddressListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CapitalDepositAddressListResponse, GetSapiV1CapitalDepositAddressListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/deposit/address/list',
        ...options
    });
};

/**
 * Get symbols delist schedule for spot (MARKET_DATA)
 * Get symbols delist schedule for spot
 *
 * Weight(IP): 100
 */
export const getSapiV1SpotDelistSchedule = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SpotDelistScheduleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SpotDelistScheduleResponse, GetSapiV1SpotDelistScheduleError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/spot/delist-schedule',
        ...options
    });
};

/**
 * Fetch withdraw address list (USER_DATA)
 * Fetch withdraw address list
 *
 * Weight(IP): 10
 */
export const getSapiV1CapitalWithdrawAddressList = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1CapitalWithdrawAddressListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1CapitalWithdrawAddressListResponse, GetSapiV1CapitalWithdrawAddressListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/capital/withdraw/address/list',
        ...options
    });
};

/**
 * Account info (USER_DATA)
 * Fetch account info detail.
 *
 * Weight(IP): 1
 */
export const getSapiV1AccountInfo = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AccountInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AccountInfoResponse, GetSapiV1AccountInfoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/account/info',
        ...options
    });
};

/**
 * Sub-account's Status on Margin/Futures (For Master Account)
 * - If no `email` sent, all sub-accounts' information will be returned.
 *
 * Weight(IP): 10
 */
export const getSapiV1SubAccountStatus = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountStatusResponse, GetSapiV1SubAccountStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/status',
        ...options
    });
};

/**
 * Enable Margin for Sub-account (For Master Account)
 * Weight(IP): 1
 */
export const postSapiV1SubAccountMarginEnable = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountMarginEnableData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountMarginEnableResponse, PostSapiV1SubAccountMarginEnableError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/margin/enable',
        ...options
    });
};

/**
 * Detail on Sub-account's Margin Account (For Master Account)
 * Weight(IP): 10
 */
export const getSapiV1SubAccountMarginAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountMarginAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountMarginAccountResponse, GetSapiV1SubAccountMarginAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/margin/account',
        ...options
    });
};

/**
 * Summary of Sub-account's Margin Account (For Master Account)
 * Weight(IP): 10
 */
export const getSapiV1SubAccountMarginAccountSummary = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountMarginAccountSummaryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountMarginAccountSummaryResponse, GetSapiV1SubAccountMarginAccountSummaryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/margin/accountSummary',
        ...options
    });
};

/**
 * Enable Futures for Sub-account (For Master Account)
 * Weight(IP): 1
 */
export const postSapiV1SubAccountFuturesEnable = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountFuturesEnableData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountFuturesEnableResponse, PostSapiV1SubAccountFuturesEnableError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/futures/enable',
        ...options
    });
};

/**
 * Detail on Sub-account's Futures Account (For Master Account)
 * Weight(IP): 10
 */
export const getSapiV1SubAccountFuturesAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountFuturesAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountFuturesAccountResponse, GetSapiV1SubAccountFuturesAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/futures/account',
        ...options
    });
};

/**
 * Summary of Sub-account's Futures Account (For Master Account)
 * Weight(IP): 1
 */
export const getSapiV1SubAccountFuturesAccountSummary = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountFuturesAccountSummaryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountFuturesAccountSummaryResponse, GetSapiV1SubAccountFuturesAccountSummaryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/futures/accountSummary',
        ...options
    });
};

/**
 * Futures Position-Risk of Sub-account (For Master Account)
 * Weight(IP): 10
 */
export const getSapiV1SubAccountFuturesPositionRisk = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountFuturesPositionRiskData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountFuturesPositionRiskResponse, GetSapiV1SubAccountFuturesPositionRiskError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/futures/positionRisk',
        ...options
    });
};

/**
 * Transfer for Sub-account (For Master Account)
 * Weight(IP): 1
 */
export const postSapiV1SubAccountFuturesTransfer = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountFuturesTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountFuturesTransferResponse, PostSapiV1SubAccountFuturesTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/futures/transfer',
        ...options
    });
};

/**
 * Margin Transfer for Sub-account (For Master Account)
 * Weight(IP): 1
 */
export const postSapiV1SubAccountMarginTransfer = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountMarginTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountMarginTransferResponse, PostSapiV1SubAccountMarginTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/margin/transfer',
        ...options
    });
};

/**
 * Transfer to Sub-account of Same Master (For Sub-account)
 * Weight(IP): 1
 */
export const postSapiV1SubAccountTransferSubToSub = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountTransferSubToSubData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountTransferSubToSubResponse, PostSapiV1SubAccountTransferSubToSubError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/transfer/subToSub',
        ...options
    });
};

/**
 * Transfer to Master (For Sub-account)
 * Weight(IP): 1
 */
export const postSapiV1SubAccountTransferSubToMaster = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountTransferSubToMasterData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountTransferSubToMasterResponse, PostSapiV1SubAccountTransferSubToMasterError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/transfer/subToMaster',
        ...options
    });
};

/**
 * Sub-account Transfer History (For Sub-account)
 * - If `type` is not sent, the records of type 2: transfer out will be returned by default.
 * - If `startTime` and `endTime` are not sent, the recent 30-day data will be returned.
 *
 * Weight(IP): 1
 */
export const getSapiV1SubAccountTransferSubUserHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountTransferSubUserHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountTransferSubUserHistoryResponse, GetSapiV1SubAccountTransferSubUserHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/transfer/subUserHistory',
        ...options
    });
};

/**
 * Universal Transfer History (For Master Account)
 * - `fromEmail` and `toEmail` cannot be sent at the same time.
 * - Return `fromEmail` equal master account email by default.
 * - The query time period must be less then 30 days.
 * - If startTime and endTime not sent, return records of the last 30 days by default.
 *
 * Weight(IP): 1
 */
export const getSapiV1SubAccountUniversalTransfer = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountUniversalTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountUniversalTransferResponse, GetSapiV1SubAccountUniversalTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/universalTransfer',
        ...options
    });
};

/**
 * Universal Transfer (For Master Account)
 * - You need to enable "internal transfer" option for the api key which requests this endpoint.
 * - Transfer from master account by default if fromEmail is not sent.
 * - Transfer to master account by default if toEmail is not sent.
 * - Supported transfer scenarios:
 * - Master account SPOT transfer to sub-account SPOT,USDT_FUTURE,COIN_FUTURE,MARGIN(Cross),ISOLATED_MARGIN
 * - Sub-account SPOT,USDT_FUTURE,COIN_FUTURE,MARGIN(Cross),ISOLATED_MARGIN transfer to master account SPOT
 * - Transfer between two sub-account SPOT accounts
 *
 * Weight(IP): 1
 */
export const postSapiV1SubAccountUniversalTransfer = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountUniversalTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountUniversalTransferResponse, PostSapiV1SubAccountUniversalTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/universalTransfer',
        ...options
    });
};

/**
 * Detail on Sub-account's Futures Account V2 (For Master Account)
 * Weight(IP): 1
 */
export const getSapiV2SubAccountFuturesAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2SubAccountFuturesAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2SubAccountFuturesAccountResponse, GetSapiV2SubAccountFuturesAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/sub-account/futures/account',
        ...options
    });
};

/**
 * Summary of Sub-account's Futures Account V2 (For Master Account)
 * Weight(IP): 10
 */
export const getSapiV2SubAccountFuturesAccountSummary = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2SubAccountFuturesAccountSummaryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2SubAccountFuturesAccountSummaryResponse, GetSapiV2SubAccountFuturesAccountSummaryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/sub-account/futures/accountSummary',
        ...options
    });
};

/**
 * Futures Position-Risk of Sub-account V2 (For Master Account)
 * Weight(IP): 1
 */
export const getSapiV2SubAccountFuturesPositionRisk = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2SubAccountFuturesPositionRiskData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2SubAccountFuturesPositionRiskResponse, GetSapiV2SubAccountFuturesPositionRiskError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/sub-account/futures/positionRisk',
        ...options
    });
};

/**
 * Enable Leverage Token for Sub-account (For Master Account)
 * Weight(IP): 1
 */
export const postSapiV1SubAccountBlvtEnable = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountBlvtEnableData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountBlvtEnableResponse, PostSapiV1SubAccountBlvtEnableError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/blvt/enable',
        ...options
    });
};

/**
 * Deposit assets into the managed sub-account(For Investor Master Account)
 * Weight(IP): 1
 */
export const postSapiV1ManagedSubaccountDeposit = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1ManagedSubaccountDepositData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1ManagedSubaccountDepositResponse, PostSapiV1ManagedSubaccountDepositError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/deposit',
        ...options
    });
};

/**
 * Managed sub-account asset details(For Investor Master Account)
 * Weight(IP): 1
 */
export const getSapiV1ManagedSubaccountAsset = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountAssetResponse, GetSapiV1ManagedSubaccountAssetError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/asset',
        ...options
    });
};

/**
 * Withdrawl assets from the managed sub-account(For Investor Master Account)
 * Weight(IP): 1
 */
export const postSapiV1ManagedSubaccountWithdraw = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1ManagedSubaccountWithdrawData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1ManagedSubaccountWithdrawResponse, PostSapiV1ManagedSubaccountWithdrawError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/withdraw',
        ...options
    });
};

/**
 * Managed sub-account snapshot (For Investor Master Account)
 * - The query time period must be less then 30 days
 * - Support query within the last one month only
 * - If `startTime` and `endTime` not sent, return records of the last 7 days by default
 *
 * Weight(IP): 2400
 */
export const getSapiV1ManagedSubaccountAccountSnapshot = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountAccountSnapshotData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountAccountSnapshotResponse, GetSapiV1ManagedSubaccountAccountSnapshotError, ThrowOnError>({
        url: '/sapi/v1/managed-subaccount/accountSnapshot',
        ...options
    });
};

/**
 * Query Managed Sub Account Transfer Log (For Investor Master Account)
 * Investor can use this api to query managed sub account transfer log. This endpoint is available for investor of Managed Sub-Account. A Managed Sub-Account is an account type for investors who value flexibility in asset allocation and account application, while delegating trades to a professional trading team.
 *
 * Weight(IP): 1
 */
export const getSapiV1ManagedSubaccountQueryTransLogForInvestor = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountQueryTransLogForInvestorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountQueryTransLogForInvestorResponse, GetSapiV1ManagedSubaccountQueryTransLogForInvestorError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/queryTransLogForInvestor',
        ...options
    });
};

/**
 * Query Managed Sub Account Transfer Log (For Trading Team Master Account)
 * Trading team can use this api to query managed sub account transfer log. This endpoint is available for trading team of Managed Sub-Account. A Managed Sub-Account is an account type for investors who value flexibility in asset allocation and account application, while delegating trades to a professional trading team
 *
 * Weight(IP): 60
 */
export const getSapiV1ManagedSubaccountQueryTransLogForTradeParent = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountQueryTransLogForTradeParentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountQueryTransLogForTradeParentResponse, GetSapiV1ManagedSubaccountQueryTransLogForTradeParentError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/queryTransLogForTradeParent',
        ...options
    });
};

/**
 * Query Managed Sub-account Futures Asset Details (For Investor Master Account)
 * Investor can use this api to query managed sub account futures asset details
 */
export const getSapiV1ManagedSubaccountFetchFutureAsset = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountFetchFutureAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountFetchFutureAssetResponse, GetSapiV1ManagedSubaccountFetchFutureAssetError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/fetch-future-asset',
        ...options
    });
};

/**
 * Query Managed Sub-account Margin Asset Details (For Investor Master Account)
 * Investor can use this api to query managed sub account margin asset details
 */
export const getSapiV1ManagedSubaccountMarginAsset = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountMarginAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountMarginAssetResponse, GetSapiV1ManagedSubaccountMarginAssetError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/marginAsset',
        ...options
    });
};

/**
 * Query Managed Sub-account List (For Investor)
 * Get investor's managed sub-account list.
 *
 * Weight(UID): 60
 */
export const getSapiV1ManagedSubaccountInfo = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountInfoResponse, GetSapiV1ManagedSubaccountInfoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/info',
        ...options
    });
};

/**
 * Get Managed Sub-account Deposit Address (For Investor Master Account)
 * Get investor's managed sub-account deposit address
 *
 * Weight(UID): 1
 */
export const getSapiV1ManagedSubaccountDepositAddress = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountDepositAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountDepositAddressResponse, GetSapiV1ManagedSubaccountDepositAddressError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/deposit/address',
        ...options
    });
};

/**
 * Query Managed Sub Account Transfer Log (For Trading Team Sub Account)(USER_DATA)
 * Query Managed Sub Account Transfer Log (For Trading Team Sub Account)
 *
 * Weight(UID): 60
 */
export const getSapiV1ManagedSubaccountQueryTransLog = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ManagedSubaccountQueryTransLogData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ManagedSubaccountQueryTransLogResponse, GetSapiV1ManagedSubaccountQueryTransLogError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/managed-subaccount/query-trans-log',
        ...options
    });
};

/**
 * Get IP Restriction for a Sub-account API Key (For Master Account)
 * Weight(UID): 3000
 */
export const getSapiV1SubAccountSubAccountApiIpRestriction = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountSubAccountApiIpRestrictionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountSubAccountApiIpRestrictionResponse, GetSapiV1SubAccountSubAccountApiIpRestrictionError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/subAccountApi/ipRestriction',
        ...options
    });
};

/**
 * Delete IP List for a Sub-account API Key (For Master Account)
 * Weight(UID): 3000
 */
export const deleteSapiV1SubAccountSubAccountApiIpRestrictionIpList = <ThrowOnError extends boolean = false>(options: Options<DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse, DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/subAccountApi/ipRestriction/ipList',
        ...options
    });
};

/**
 * Query Sub-account Transaction Statistics (For Master Account)
 * Query Sub-account Transaction statistics (For Master Account).
 *
 * Weight(UID): 60
 */
export const getSapiV1SubAccountTransactionStatistics = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SubAccountTransactionStatisticsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SubAccountTransactionStatisticsResponse, GetSapiV1SubAccountTransactionStatisticsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/transaction-statistics',
        ...options
    });
};

/**
 * Enable Options for Sub-account (For Master Account)(USER_DATA)
 * Enable Options for Sub-account (For Master Account).
 *
 * Weight(IP): 1
 */
export const postSapiV1SubAccountEoptionsEnable = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SubAccountEoptionsEnableData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SubAccountEoptionsEnableResponse, PostSapiV1SubAccountEoptionsEnableError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/sub-account/eoptions/enable',
        ...options
    });
};

/**
 * Update IP Restriction for Sub-Account API key (For Master Account)
 * Update IP Restriction for Sub-Account API key
 *
 * Weight(UID): 3000
 */
export const postSapiV2SubAccountSubAccountApiIpRestriction = <ThrowOnError extends boolean = false>(options: Options<PostSapiV2SubAccountSubAccountApiIpRestrictionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV2SubAccountSubAccountApiIpRestrictionResponse, PostSapiV2SubAccountSubAccountApiIpRestrictionError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/sub-account/subAccountApi/ipRestriction',
        ...options
    });
};

/**
 * Query Sub-account Assets (For Master Account)
 * Fetch sub-account assets
 *
 * Weight(UID): 60
 */
export const getSapiV4SubAccountAssets = <ThrowOnError extends boolean = false>(options: Options<GetSapiV4SubAccountAssetsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV4SubAccountAssetsResponse, GetSapiV4SubAccountAssetsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v4/sub-account/assets',
        ...options
    });
};

/**
 * Close a ListenKey (USER_STREAM)
 * Close out a user data stream.
 *
 * Weight: 2
 */
export const deleteApiV3UserDataStream = <ThrowOnError extends boolean = false>(options?: Options<DeleteApiV3UserDataStreamData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteApiV3UserDataStreamResponse, DeleteApiV3UserDataStreamError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/userDataStream',
        ...options
    });
};

/**
 * Create a ListenKey (USER_STREAM)
 * Start a new user data stream.
 * The stream will close after 60 minutes unless a keepalive is sent. If the account has an active `listenKey`, that `listenKey` will be returned and its validity will be extended for 60 minutes.
 *
 * Weight: 2
 */
export const postApiV3UserDataStream = <ThrowOnError extends boolean = false>(options?: Options<PostApiV3UserDataStreamData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostApiV3UserDataStreamResponse, unknown, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/userDataStream',
        ...options
    });
};

/**
 * Ping/Keep-alive a ListenKey (USER_STREAM)
 * Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 30 minutes.
 *
 * Weight: 2
 */
export const putApiV3UserDataStream = <ThrowOnError extends boolean = false>(options?: Options<PutApiV3UserDataStreamData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutApiV3UserDataStreamResponse, PutApiV3UserDataStreamError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/api/v3/userDataStream',
        ...options
    });
};

/**
 * Close a ListenKey (USER_STREAM)
 * Close out a user data stream.
 *
 * Weight: 1
 */
export const deleteSapiV1UserDataStream = <ThrowOnError extends boolean = false>(options?: Options<DeleteSapiV1UserDataStreamData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteSapiV1UserDataStreamResponse, DeleteSapiV1UserDataStreamError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/userDataStream',
        ...options
    });
};

/**
 * Create a ListenKey (USER_STREAM)
 * Start a new user data stream.
 * The stream will close after 60 minutes unless a keepalive is sent. If the account has an active `listenKey`, that `listenKey` will be returned and its validity will be extended for 60 minutes.
 *
 * Weight: 1
 */
export const postSapiV1UserDataStream = <ThrowOnError extends boolean = false>(options?: Options<PostSapiV1UserDataStreamData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSapiV1UserDataStreamResponse, unknown, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/userDataStream',
        ...options
    });
};

/**
 * Ping/Keep-alive a ListenKey (USER_STREAM)
 * Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 30 minutes.
 *
 * Weight: 1
 */
export const putSapiV1UserDataStream = <ThrowOnError extends boolean = false>(options?: Options<PutSapiV1UserDataStreamData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutSapiV1UserDataStreamResponse, PutSapiV1UserDataStreamError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/userDataStream',
        ...options
    });
};

/**
 * Close a ListenKey (USER_STREAM)
 * Close out a user data stream.
 *
 * Weight: 1
 */
export const deleteSapiV1UserDataStreamIsolated = <ThrowOnError extends boolean = false>(options?: Options<DeleteSapiV1UserDataStreamIsolatedData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteSapiV1UserDataStreamIsolatedResponse, DeleteSapiV1UserDataStreamIsolatedError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/userDataStream/isolated',
        ...options
    });
};

/**
 * Generate a Listen Key (USER_STREAM)
 * Start a new user data stream.
 * The stream will close after 60 minutes unless a keepalive is sent. If the account has an active `listenKey`, that `listenKey` will be returned and its validity will be extended for 60 minutes.
 *
 * Weight: 1
 */
export const postSapiV1UserDataStreamIsolated = <ThrowOnError extends boolean = false>(options?: Options<PostSapiV1UserDataStreamIsolatedData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSapiV1UserDataStreamIsolatedResponse, unknown, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/userDataStream/isolated',
        ...options
    });
};

/**
 * Ping/Keep-alive a Listen Key (USER_STREAM)
 * Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 30 minutes.
 *
 * Weight: 1
 */
export const putSapiV1UserDataStreamIsolated = <ThrowOnError extends boolean = false>(options?: Options<PutSapiV1UserDataStreamIsolatedData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutSapiV1UserDataStreamIsolatedResponse, PutSapiV1UserDataStreamIsolatedError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/userDataStream/isolated',
        ...options
    });
};

/**
 * Fiat Deposit/Withdraw History (USER_DATA)
 * - If beginTime and endTime are not sent, the recent 30-day data will be returned.
 *
 * Weight(UID): 90000
 */
export const getSapiV1FiatOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1FiatOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1FiatOrdersResponse, GetSapiV1FiatOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/fiat/orders',
        ...options
    });
};

/**
 * Fiat Payments History (USER_DATA)
 * - If beginTime and endTime are not sent, the recent 30-day data will be returned.
 *
 * Weight(IP): 1
 */
export const getSapiV1FiatPayments = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1FiatPaymentsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1FiatPaymentsResponse, GetSapiV1FiatPaymentsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/fiat/payments',
        ...options
    });
};

/**
 * Get Fixed/Activity Project List(USER_DATA)
 * Weight(IP): 1
 */
export const getSapiV1LendingProjectList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingProjectListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingProjectListResponse, GetSapiV1LendingProjectListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/project/list',
        ...options
    });
};

/**
 * Purchase Fixed/Activity Project (USER_DATA)
 * Weight(IP): 1
 */
export const postSapiV1LendingCustomizedFixedPurchase = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LendingCustomizedFixedPurchaseData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LendingCustomizedFixedPurchaseResponse, PostSapiV1LendingCustomizedFixedPurchaseError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/customizedFixed/purchase',
        ...options
    });
};

/**
 * Get Fixed/Activity Project Position (USER_DATA)
 * Weight(IP): 1
 */
export const getSapiV1LendingProjectPositionList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingProjectPositionListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingProjectPositionListResponse, GetSapiV1LendingProjectPositionListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/project/position/list',
        ...options
    });
};

/**
 * Change Fixed/Activity Position to Daily Position (USER_DATA)
 * - PositionId is mandatory parameter for fixed position.
 *
 * Weight(IP): 1
 */
export const postSapiV1LendingPositionChanged = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LendingPositionChangedData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LendingPositionChangedResponse, PostSapiV1LendingPositionChangedError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/positionChanged',
        ...options
    });
};

/**
 * Acquiring Algorithm (MARKET_DATA)
 * Weight(IP): 1
 */
export const getSapiV1MiningPubAlgoList = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1MiningPubAlgoListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1MiningPubAlgoListResponse, GetSapiV1MiningPubAlgoListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/pub/algoList',
        ...options
    });
};

/**
 * Acquiring CoinName (MARKET_DATA)
 * Weight(IP): 1
 */
export const getSapiV1MiningPubCoinList = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1MiningPubCoinListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1MiningPubCoinListResponse, GetSapiV1MiningPubCoinListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/pub/coinList',
        ...options
    });
};

/**
 * Request for Detail Miner List (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningWorkerDetail = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningWorkerDetailData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningWorkerDetailResponse, GetSapiV1MiningWorkerDetailError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/worker/detail',
        ...options
    });
};

/**
 * Request for Miner List (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningWorkerList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningWorkerListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningWorkerListResponse, GetSapiV1MiningWorkerListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/worker/list',
        ...options
    });
};

/**
 * Earnings List (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningPaymentList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningPaymentListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningPaymentListResponse, GetSapiV1MiningPaymentListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/payment/list',
        ...options
    });
};

/**
 * Extra Bonus List (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningPaymentOther = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningPaymentOtherData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningPaymentOtherResponse, GetSapiV1MiningPaymentOtherError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/payment/other',
        ...options
    });
};

/**
 * Hashrate Resale List (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningHashTransferConfigDetailsList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningHashTransferConfigDetailsListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningHashTransferConfigDetailsListResponse, GetSapiV1MiningHashTransferConfigDetailsListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/hash-transfer/config/details/list',
        ...options
    });
};

/**
 * Hashrate Resale Details (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningHashTransferProfitDetails = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningHashTransferProfitDetailsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningHashTransferProfitDetailsResponse, GetSapiV1MiningHashTransferProfitDetailsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/hash-transfer/profit/details',
        ...options
    });
};

/**
 * Hashrate Resale Request (USER_DATA)
 * Weight(IP): 5
 */
export const postSapiV1MiningHashTransferConfig = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MiningHashTransferConfigData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MiningHashTransferConfigResponse, PostSapiV1MiningHashTransferConfigError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/hash-transfer/config',
        ...options
    });
};

/**
 * Cancel Hashrate Resale configuration (USER_DATA)
 * Weight(IP): 5
 */
export const postSapiV1MiningHashTransferConfigCancel = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1MiningHashTransferConfigCancelData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1MiningHashTransferConfigCancelResponse, PostSapiV1MiningHashTransferConfigCancelError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/hash-transfer/config/cancel',
        ...options
    });
};

/**
 * Statistic List (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningStatisticsUserStatus = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningStatisticsUserStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningStatisticsUserStatusResponse, GetSapiV1MiningStatisticsUserStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/statistics/user/status',
        ...options
    });
};

/**
 * Account List (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningStatisticsUserList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningStatisticsUserListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningStatisticsUserListResponse, GetSapiV1MiningStatisticsUserListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/statistics/user/list',
        ...options
    });
};

/**
 * Mining Account Earning (USER_DATA)
 * Weight(IP): 5
 */
export const getSapiV1MiningPaymentUid = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1MiningPaymentUidData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1MiningPaymentUidResponse, GetSapiV1MiningPaymentUidError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/mining/payment/uid',
        ...options
    });
};

/**
 * Get Future Account Transaction History List (USER_DATA)
 * Weight(IP): 10
 */
export const getSapiV1FuturesTransfer = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1FuturesTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1FuturesTransferResponse, GetSapiV1FuturesTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/futures/transfer',
        ...options
    });
};

/**
 * New Future Account Transfer (USER_DATA)
 * Execute transfer between spot account and futures account.
 *
 * Weight(IP): 1
 */
export const postSapiV1FuturesTransfer = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1FuturesTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1FuturesTransferResponse, PostSapiV1FuturesTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/futures/transfer',
        ...options
    });
};

/**
 * Get Future TickLevel Orderbook Historical Data Download Link (USER_DATA)
 * Weight(IP): 1
 */
export const getSapiV1FuturesHistDataLink = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1FuturesHistDataLinkData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1FuturesHistDataLinkResponse, GetSapiV1FuturesHistDataLinkError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/futures/histDataLink',
        ...options
    });
};

/**
 * Volume Participation(VP) New Order (TRADE)
 * Send in a VP new order. Only support on USDⓈ-M Contracts.
 *
 * - You need to enable `Futures Trading Permission` for the api key which requests this endpoint.
 * - Base URL: https://api.binance.com
 *
 * - Total Algo open orders max allowed: 10 orders.
 * - Leverage of symbols and position mode will be the same as your futures account settings. You can set up through the trading page or fapi.
 * - Receiving "success": true does not mean that your order will be executed. Please use the query order endpoints(GET sapi/v1/algo/futures/openOrders or GET sapi/v1/algo/futures/historicalOrders) to check the order status. For example: Your futures balance is insufficient, or open position with reduce only or position side is inconsistent with your own setting. In these cases you will receive "success": true, but the order status will be expired after we check it.
 *
 * Weight(UID): 3000
 */
export const postSapiV1AlgoFuturesNewOrderVp = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AlgoFuturesNewOrderVpData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AlgoFuturesNewOrderVpResponse, PostSapiV1AlgoFuturesNewOrderVpError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/futures/newOrderVp',
        ...options
    });
};

/**
 * Time-Weighted Average Price(Twap) New Order (TRADE)
 * Send in a Twap new order. Only support on USDⓈ-M Contracts.
 *
 * You need to enable Futures Trading Permission for the api key which requests this endpoint.
 * Base URL: https://api.binance.com
 *
 * - Total Algo open orders max allowed: 10 orders.
 * - Leverage of symbols and position mode will be the same as your futures account settings. You can set up through the trading page or fapi.
 * - Receiving "success": true does not mean that your order will be executed. Please use the query order endpoints(GET sapi/v1/algo/futures/openOrders or GET sapi/v1/algo/futures/historicalOrders) to check the order status. For example: Your futures balance is insufficient, or open position with reduce only or position side is inconsistent with your own setting. In these cases you will receive "success": true, but the order status will be expired after we check it.
 * - quantity * 60 / duration should be larger than minQty
 * - duration cannot be less than 5 mins or more than 24 hours.
 * - For delivery contracts, TWAP end time should be one hour earlier than the delivery time of the symbol.
 *
 * Weight(UID): 3000
 */
export const postSapiV1AlgoFuturesNewOrderTwap = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AlgoFuturesNewOrderTwapData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AlgoFuturesNewOrderTwapResponse, PostSapiV1AlgoFuturesNewOrderTwapError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/futures/newOrderTwap',
        ...options
    });
};

/**
 * Cancel Algo Order(TRADE)
 * Cancel an active order.
 * - You need to enable Futures Trading Permission for the api key which requests this endpoint.
 * - Base URL: https://api.binance.com
 *
 * Weight(IP): 1
 */
export const deleteSapiV1AlgoFuturesOrder = <ThrowOnError extends boolean = false>(options: Options<DeleteSapiV1AlgoFuturesOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSapiV1AlgoFuturesOrderResponse, DeleteSapiV1AlgoFuturesOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/futures/order',
        ...options
    });
};

/**
 * Query Current Algo Open Orders (USER_DATA)
 * - You need to enable Futures Trading Permission for the api key which requests this endpoint.
 * - Base URL: https://api.binance.com
 *
 * Weight(IP): 1
 */
export const getSapiV1AlgoFuturesOpenOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AlgoFuturesOpenOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AlgoFuturesOpenOrdersResponse, GetSapiV1AlgoFuturesOpenOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/futures/openOrders',
        ...options
    });
};

/**
 * Query Historical Algo Orders (USER_DATA)
 * - You need to enable Futures Trading Permission for the api key which requests this endpoint.
 * - Base URL: https://api.binance.com
 *
 * Weight(IP): 1
 */
export const getSapiV1AlgoFuturesHistoricalOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AlgoFuturesHistoricalOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AlgoFuturesHistoricalOrdersResponse, GetSapiV1AlgoFuturesHistoricalOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/futures/historicalOrders',
        ...options
    });
};

/**
 * Query Sub Orders (USER_DATA)
 * - You need to enable Futures Trading Permission for the api key which requests this endpoint.
 * - Base URL: https://api.binance.com
 *
 * Weight(IP): 1
 */
export const getSapiV1AlgoFuturesSubOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AlgoFuturesSubOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AlgoFuturesSubOrdersResponse, GetSapiV1AlgoFuturesSubOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/futures/subOrders',
        ...options
    });
};

/**
 * Time-Weighted Average Price (Twap) New Order
 * Place a new spot TWAP order with Algo service.
 *
 * Weight(UID): 3000
 */
export const postSapiV1AlgoSpotNewOrderTwap = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1AlgoSpotNewOrderTwapData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1AlgoSpotNewOrderTwapResponse, PostSapiV1AlgoSpotNewOrderTwapError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/spot/newOrderTwap',
        ...options
    });
};

/**
 * Cancel Algo Order
 * Cancel an open TWAP order
 *
 * Weight(IP): 1
 */
export const deleteSapiV1AlgoSpotOrder = <ThrowOnError extends boolean = false>(options: Options<DeleteSapiV1AlgoSpotOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSapiV1AlgoSpotOrderResponse, DeleteSapiV1AlgoSpotOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/spot/order',
        ...options
    });
};

/**
 * Query Current Algo Open Orders
 * Get all open SPOT TWAP orders
 *
 * Weight(IP): 1
 */
export const getSapiV1AlgoSpotOpenOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AlgoSpotOpenOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AlgoSpotOpenOrdersResponse, GetSapiV1AlgoSpotOpenOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/spot/openOrders',
        ...options
    });
};

/**
 * Query Historical Algo Orders
 * Get all historical SPOT TWAP orders
 *
 * Weight(IP): 1
 */
export const getSapiV1AlgoSpotHistoricalOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AlgoSpotHistoricalOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AlgoSpotHistoricalOrdersResponse, GetSapiV1AlgoSpotHistoricalOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/spot/historicalOrders',
        ...options
    });
};

/**
 * Query Sub Orders
 * Get respective sub orders for a specified algoId
 *
 * Weight(IP): 1
 */
export const getSapiV1AlgoSpotSubOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1AlgoSpotSubOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1AlgoSpotSubOrdersResponse, GetSapiV1AlgoSpotSubOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/algo/spot/subOrders',
        ...options
    });
};

/**
 * Portfolio Margin Account (USER_DATA)
 * Get the account info
 *
 * 'Weight(IP): 1'
 */
export const getSapiV1PortfolioAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1PortfolioAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1PortfolioAccountResponse, GetSapiV1PortfolioAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/account',
        ...options
    });
};

/**
 * Portfolio Margin Collateral Rate (MARKET_DATA)
 * Portfolio Margin Collateral Rate.
 *
 * Weight(IP): 50
 */
export const getSapiV1PortfolioCollateralRate = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1PortfolioCollateralRateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1PortfolioCollateralRateResponse, GetSapiV1PortfolioCollateralRateError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/collateralRate',
        ...options
    });
};

/**
 * Portfolio Margin Pro Tiered Collateral Rate(USER_DATA)
 * Portfolio Margin PRO Tiered Collateral Rate
 *
 * Weight(IP): 50
 */
export const getSapiV2PortfolioCollateralRate = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2PortfolioCollateralRateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2PortfolioCollateralRateResponse, GetSapiV2PortfolioCollateralRateError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/portfolio/collateralRate',
        ...options
    });
};

/**
 * Portfolio Margin Bankruptcy Loan Amount (USER_DATA)
 * Query Portfolio Margin Bankruptcy Loan Amount.
 *
 * Weight(UID): 500
 */
export const getSapiV1PortfolioPmLoan = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1PortfolioPmLoanData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1PortfolioPmLoanResponse, GetSapiV1PortfolioPmLoanError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/pmLoan',
        ...options
    });
};

/**
 * Portfolio Margin Bankruptcy Loan Repay (USER_DATA)
 * Repay Portfolio Margin Bankruptcy Loan.
 *
 * Weight(UID): 3000
 */
export const postSapiV1PortfolioRepay = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1PortfolioRepayData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1PortfolioRepayResponse, PostSapiV1PortfolioRepayError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/repay',
        ...options
    });
};

/**
 * Query Classic Portfolio Margin Negative Balance Interest History (USER_DATA)
 * Query interest history of negative balance for portfolio margin.
 *
 * Weight(IP): 50
 */
export const getSapiV1PortfolioInterestHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1PortfolioInterestHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1PortfolioInterestHistoryResponse, GetSapiV1PortfolioInterestHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/interest-history',
        ...options
    });
};

/**
 * Query Portfolio Margin Asset Index Price (MARKET_DATA)
 * Query Portfolio Margin Asset Index Price
 *
 * Weight(IP):
 * - 1 if send asset
 * - 50 if not send asset
 */
export const getSapiV1PortfolioAssetIndexPrice = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1PortfolioAssetIndexPriceData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1PortfolioAssetIndexPriceResponse, GetSapiV1PortfolioAssetIndexPriceError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/asset-index-price',
        ...options
    });
};

/**
 * Fund Auto-collection (USER_DATA)
 * Transfers all assets from Futures Account to Margin account
 *
 * Weight(IP): 1500
 */
export const postSapiV1PortfolioAutoCollection = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1PortfolioAutoCollectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1PortfolioAutoCollectionResponse, PostSapiV1PortfolioAutoCollectionError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/auto-collection',
        ...options
    });
};

/**
 * BNB Transfer (USER_DATA)
 * BNB transfer can be between Margin Account and USDM Account
 *
 * Weight(IP): 1500
 */
export const postSapiV1PortfolioBnbTransfer = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1PortfolioBnbTransferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1PortfolioBnbTransferResponse, PostSapiV1PortfolioBnbTransferError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/bnb-transfer',
        ...options
    });
};

/**
 * Get Auto-repay-futures Status (USER_DATA)
 * Query Auto-repay-futures Status
 *
 * Weight(IP): 30
 */
export const getSapiV1PortfolioRepayFuturesSwitch = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1PortfolioRepayFuturesSwitchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1PortfolioRepayFuturesSwitchResponse, GetSapiV1PortfolioRepayFuturesSwitchError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/repay-futures-switch',
        ...options
    });
};

/**
 * Change Auto-repay-futures Status (USER_DATA)
 * Change Auto-repay-futures Status
 *
 * Weight(IP): 1500
 */
export const postSapiV1PortfolioRepayFuturesSwitch = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1PortfolioRepayFuturesSwitchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1PortfolioRepayFuturesSwitchResponse, PostSapiV1PortfolioRepayFuturesSwitchError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/repay-futures-switch',
        ...options
    });
};

/**
 * Repay futures Negative Balance (USER_DATA)
 * Repay futures Negative Balance
 *
 * Weight(IP): 1500
 */
export const postSapiV1PortfolioRepayFuturesNegativeBalance = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1PortfolioRepayFuturesNegativeBalanceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1PortfolioRepayFuturesNegativeBalanceResponse, PostSapiV1PortfolioRepayFuturesNegativeBalanceError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/repay-futures-negative-balance',
        ...options
    });
};

/**
 * Get Portfolio Margin Asset Leverage (USER_DATA)
 * Weight(IP): 50
 */
export const getSapiV1PortfolioMarginAssetLeverage = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1PortfolioMarginAssetLeverageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1PortfolioMarginAssetLeverageResponse, GetSapiV1PortfolioMarginAssetLeverageError, ThrowOnError>({
        url: '/sapi/v1/portfolio/margin-asset-leverage',
        ...options
    });
};

/**
 * Fund Collection by Asset (USER_DATA)
 * Transfers specific asset from Futures Account to Margin account
 *
 * Weight(IP): 60
 */
export const postSapiV1PortfolioAssetCollection = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1PortfolioAssetCollectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1PortfolioAssetCollectionResponse, PostSapiV1PortfolioAssetCollectionError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/portfolio/asset-collection',
        ...options
    });
};

/**
 * BLVT Info (MARKET_DATA)
 * Weight(IP): 1
 */
export const getSapiV1BlvtTokenInfo = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1BlvtTokenInfoData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1BlvtTokenInfoResponse, GetSapiV1BlvtTokenInfoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/blvt/tokenInfo',
        ...options
    });
};

/**
 * Subscribe BLVT (USER_DATA)
 * Weight(IP): 1
 */
export const postSapiV1BlvtSubscribe = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1BlvtSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1BlvtSubscribeResponse, PostSapiV1BlvtSubscribeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/blvt/subscribe',
        ...options
    });
};

/**
 * Query Subscription Record (USER_DATA)
 * - Only the data of the latest 90 days is available
 *
 * Weight(IP): 1
 */
export const getSapiV1BlvtSubscribeRecord = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1BlvtSubscribeRecordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1BlvtSubscribeRecordResponse, GetSapiV1BlvtSubscribeRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/blvt/subscribe/record',
        ...options
    });
};

/**
 * Redeem BLVT (USER_DATA)
 * Weight(IP): 1
 */
export const postSapiV1BlvtRedeem = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1BlvtRedeemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1BlvtRedeemResponse, PostSapiV1BlvtRedeemError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/blvt/redeem',
        ...options
    });
};

/**
 * Redemption Record (USER_DATA)
 * - Only the data of the latest 90 days is available
 *
 * Weight(IP): 1
 */
export const getSapiV1BlvtRedeemRecord = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1BlvtRedeemRecordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1BlvtRedeemRecordResponse, GetSapiV1BlvtRedeemRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/blvt/redeem/record',
        ...options
    });
};

/**
 * BLVT User Limit Info (USER_DATA)
 * Weight(IP): 1
 */
export const getSapiV1BlvtUserLimit = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1BlvtUserLimitData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1BlvtUserLimitResponse, GetSapiV1BlvtUserLimitError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/blvt/userLimit',
        ...options
    });
};

/**
 * Get C2C Trade History (USER_DATA)
 * - If startTimestamp and endTimestamp are not sent, the recent 30-day data will be returned.
 * - The max interval between startTimestamp and endTimestamp is 30 days.
 *
 * Weight(IP): 1
 */
export const getSapiV1C2cOrderMatchListUserOrderHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1C2cOrderMatchListUserOrderHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1C2cOrderMatchListUserOrderHistoryResponse, GetSapiV1C2cOrderMatchListUserOrderHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/c2c/orderMatch/listUserOrderHistory',
        ...options
    });
};

/**
 * Get VIP Loan Ongoing Orders (USER_DATA)
 * VIP loan is available for VIP users only.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanVipOngoingOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanVipOngoingOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanVipOngoingOrdersResponse, GetSapiV1LoanVipOngoingOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/ongoing/orders',
        ...options
    });
};

/**
 * VIP Loan Repay (TRADE)
 * VIP loan is available for VIP users only.
 *
 * Weight(UID): 6000
 */
export const postSapiV1LoanVipRepay = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LoanVipRepayData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LoanVipRepayResponse, PostSapiV1LoanVipRepayError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/repay',
        ...options
    });
};

/**
 * Get VIP Loan Repayment History (USER_DATA)
 * VIP loan is available for VIP users only.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanVipRepayHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanVipRepayHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanVipRepayHistoryResponse, GetSapiV1LoanVipRepayHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/repay/history',
        ...options
    });
};

/**
 * Check Locked Value of VIP Collateral Account (USER_DATA)
 * VIP loan is available for VIP users only.
 *
 * Weight(IP): 6000
 */
export const getSapiV1LoanVipCollateralAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanVipCollateralAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanVipCollateralAccountResponse, GetSapiV1LoanVipCollateralAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/collateral/account',
        ...options
    });
};

/**
 * VIP Loan Borrow
 * VIP loan is available for VIP users only.
 *
 * Weight(UID): 6000
 */
export const postSapiV1LoanVipBorrow = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LoanVipBorrowData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LoanVipBorrowResponse, PostSapiV1LoanVipBorrowError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/borrow',
        ...options
    });
};

/**
 * Get Loanable Assets Data
 * Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanVipLoanableData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanVipLoanableDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanVipLoanableDataResponse, GetSapiV1LoanVipLoanableDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/loanable/data',
        ...options
    });
};

/**
 * Get Collateral Asset Data (USER_DATA)
 * Get collateral asset data.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanVipCollateralData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanVipCollateralDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanVipCollateralDataResponse, GetSapiV1LoanVipCollateralDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/collateral/data',
        ...options
    });
};

/**
 * Query Application Status (USER_DATA)
 * Get Application Status
 *
 * Weight(UID): 400
 */
export const getSapiV1LoanVipRequestData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanVipRequestDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanVipRequestDataResponse, GetSapiV1LoanVipRequestDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/request/data',
        ...options
    });
};

/**
 * Get Borrow Interest Rate (USER_DATA)
 * Get borrow interest rate.
 *
 * Weight(UID): 400
 */
export const getSapiV1LoanVipRequestInterestRate = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanVipRequestInterestRateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanVipRequestInterestRateResponse, GetSapiV1LoanVipRequestInterestRateError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/request/interestRate',
        ...options
    });
};

/**
 * VIP Loan Renew
 * VIP loan is available for VIP users only.
 *
 * Weight(UID): 6000
 */
export const postSapiV1LoanVipRenew = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LoanVipRenewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LoanVipRenewResponse, PostSapiV1LoanVipRenewError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/vip/renew',
        ...options
    });
};

/**
 * Get Crypto Loans Income History (USER_DATA)
 * - If startTime and endTime are not sent, the recent 7-day data will be returned.
 * - The max interval between startTime and endTime is 30 days.
 *
 * Weight(UID): 6000
 */
export const getSapiV1LoanIncome = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanIncomeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanIncomeResponse, GetSapiV1LoanIncomeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/income',
        ...options
    });
};

/**
 * Crypto Loan Borrow (TRADE)
 * Weight(UID): 6000
 */
export const postSapiV1LoanBorrow = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LoanBorrowData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LoanBorrowResponse, PostSapiV1LoanBorrowError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/borrow',
        ...options
    });
};

/**
 * Get Crypto Loans Borrow History (USER_DATA)
 * - If startTime and endTime are not sent, the recent 90-day data will be returned.
 * - The max interval between startTime and endTime is 180 days.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanBorrowHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanBorrowHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanBorrowHistoryResponse, GetSapiV1LoanBorrowHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/borrow/history',
        ...options
    });
};

/**
 * Get Loan Ongoing Orders (USER_DATA)
 * Weight(IP): 300
 */
export const getSapiV1LoanOngoingOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanOngoingOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanOngoingOrdersResponse, GetSapiV1LoanOngoingOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/ongoing/orders',
        ...options
    });
};

/**
 * Crypto Loan Repay (TRADE)
 * Weight(UID): 6000
 */
export const postSapiV1LoanRepay = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LoanRepayData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LoanRepayResponse, PostSapiV1LoanRepayError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/repay',
        ...options
    });
};

/**
 * Get Loan Repayment History (USER_DATA)
 * If startTime and endTime are not sent, the recent 90-day data will be returned.
 * The max interval between startTime and endTime is 180 days.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanRepayHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanRepayHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanRepayHistoryResponse, GetSapiV1LoanRepayHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/repay/history',
        ...options
    });
};

/**
 * Crypto Loan Adjust LTV (TRADE)
 * Weight(UID): 6000
 */
export const postSapiV1LoanAdjustLtv = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LoanAdjustLtvData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LoanAdjustLtvResponse, PostSapiV1LoanAdjustLtvError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/adjust/ltv',
        ...options
    });
};

/**
 * Get Loan LTV Adjustment History (USER_DATA)
 * If startTime and endTime are not sent, the recent 90-day data will be returned.
 * The max interval between startTime and endTime is 180 days.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanLtvAdjustmentHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanLtvAdjustmentHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanLtvAdjustmentHistoryResponse, GetSapiV1LoanLtvAdjustmentHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/ltv/adjustment/history',
        ...options
    });
};

/**
 * Get Loanable Assets Data (USER_DATA)
 * Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanLoanableData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanLoanableDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanLoanableDataResponse, GetSapiV1LoanLoanableDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/loanable/data',
        ...options
    });
};

/**
 * Get Collateral Assets Data (USER_DATA)
 * Get LTV information and collateral limit of collateral assets. The collateral limit is shown in USD value.
 *
 * Weight(IP): 400
 */
export const getSapiV1LoanCollateralData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanCollateralDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanCollateralDataResponse, GetSapiV1LoanCollateralDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/collateral/data',
        ...options
    });
};

/**
 * Check Collateral Repay Rate (USER_DATA)
 * Get the the rate of collateral coin / loan coin when using collateral repay, the rate will be valid within 8 second.
 *
 * Weight(IP): 6000
 */
export const getSapiV1LoanRepayCollateralRate = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LoanRepayCollateralRateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LoanRepayCollateralRateResponse, GetSapiV1LoanRepayCollateralRateError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/repay/collateral/rate',
        ...options
    });
};

/**
 * Crypto Loan Customize Margin Call (TRADE)
 * Customize margin call for ongoing orders only.
 *
 * Weight(UID): 6000
 */
export const postSapiV1LoanCustomizeMarginCall = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LoanCustomizeMarginCallData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LoanCustomizeMarginCallResponse, PostSapiV1LoanCustomizeMarginCallError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/loan/customize/margin_call',
        ...options
    });
};

/**
 * Borrow - Flexible Loan Borrow (TRADE)
 * - Only available for master account
 *
 * Weight(UID): 6000
 */
export const postSapiV2LoanFlexibleBorrow = <ThrowOnError extends boolean = false>(options: Options<PostSapiV2LoanFlexibleBorrowData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV2LoanFlexibleBorrowResponse, PostSapiV2LoanFlexibleBorrowError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/borrow',
        ...options
    });
};

/**
 * Borrow - Get Flexible Loan Ongoing Orders (USER_DATA)
 *
 * Weight(IP): 300
 */
export const getSapiV2LoanFlexibleOngoingOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2LoanFlexibleOngoingOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2LoanFlexibleOngoingOrdersResponse, GetSapiV2LoanFlexibleOngoingOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/ongoing/orders',
        ...options
    });
};

/**
 * Borrow - Get Flexible Loan Borrow History (USER_DATA)
 * - If startTime and endTime are not sent, the recent 90-day data will be returned.
 * - The max interval between startTime and endTime is 180 days.
 *
 * Weight(IP): 400
 */
export const getSapiV2LoanFlexibleBorrowHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2LoanFlexibleBorrowHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2LoanFlexibleBorrowHistoryResponse, GetSapiV2LoanFlexibleBorrowHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/borrow/history',
        ...options
    });
};

/**
 * Repay - Flexible Loan Repay (TRADE)
 * - repayAmount is mandatory even fullRepayment = FALSE
 *
 * Weight(IP): 6000
 */
export const postSapiV2LoanFlexibleRepay = <ThrowOnError extends boolean = false>(options: Options<PostSapiV2LoanFlexibleRepayData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV2LoanFlexibleRepayResponse, PostSapiV2LoanFlexibleRepayError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/repay',
        ...options
    });
};

/**
 * Repay - Get Flexible Loan Repayment History (USER_DATA)
 * - If startTime and endTime are not sent, the recent 90-day data will be returned.
 * - The max interval between startTime and endTime is 180 days.
 *
 * Weight(IP): 400
 */
export const getSapiV2LoanFlexibleRepayHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2LoanFlexibleRepayHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2LoanFlexibleRepayHistoryResponse, GetSapiV2LoanFlexibleRepayHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/repay/history',
        ...options
    });
};

/**
 * Adjust LTV - Flexible Loan Adjust LTV (TRADE)
 * - API Key needs Spot & Margin Trading permission for this endpoint
 *
 * Weight(UID): 6000
 */
export const postSapiV2LoanFlexibleAdjustLtv = <ThrowOnError extends boolean = false>(options: Options<PostSapiV2LoanFlexibleAdjustLtvData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV2LoanFlexibleAdjustLtvResponse, PostSapiV2LoanFlexibleAdjustLtvError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/adjust/ltv',
        ...options
    });
};

/**
 * Adjust LTV - Get Flexible Loan LTV Adjustment History (USER_DATA)
 * - If startTime and endTime are not sent, the recent 90-day data will be returned.
 * - The max interval between startTime and endTime is 180 days.
 *
 * Weight(IP): 400
 */
export const getSapiV2LoanFlexibleLtvAdjustmentHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2LoanFlexibleLtvAdjustmentHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2LoanFlexibleLtvAdjustmentHistoryResponse, GetSapiV2LoanFlexibleLtvAdjustmentHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/ltv/adjustment/history',
        ...options
    });
};

/**
 * Get Flexible Loan Assets Data (USER_DATA)
 * Get interest rate and borrow limit of flexible loanable assets. The borrow limit is shown in USD value.
 *
 * Weight(IP): 400
 */
export const getSapiV2LoanFlexibleLoanableData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2LoanFlexibleLoanableDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2LoanFlexibleLoanableDataResponse, GetSapiV2LoanFlexibleLoanableDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/loanable/data',
        ...options
    });
};

/**
 * Get Flexible Loan Collateral Assets Data (USER_DATA)
 * Get LTV information and collateral limit of flexible loan's collateral assets. The collateral limit is shown in USD value.
 *
 * Weight(IP): 400
 */
export const getSapiV2LoanFlexibleCollateralData = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2LoanFlexibleCollateralDataData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2LoanFlexibleCollateralDataResponse, GetSapiV2LoanFlexibleCollateralDataError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/loan/flexible/collateral/data',
        ...options
    });
};

/**
 * Get Pay Trade History (USER_DATA)
 * - If startTime and endTime are not sent, the recent 90 days' data will be returned.
 * - The max interval between startTime and endTime is 90 days.
 * - Support for querying orders within the last 18 months.
 *
 * Weight(UID): 3000
 */
export const getSapiV1PayTransactions = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1PayTransactionsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1PayTransactionsResponse, GetSapiV1PayTransactionsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/pay/transactions',
        ...options
    });
};

/**
 * List All Convert Pairs
 * Query for all convertible token pairs and the tokens’ respective upper/lower limits
 *
 * Weight(IP): 3000
 */
export const getSapiV1ConvertExchangeInfo = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1ConvertExchangeInfoData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1ConvertExchangeInfoResponse, GetSapiV1ConvertExchangeInfoError, ThrowOnError>({
        url: '/sapi/v1/convert/exchangeInfo',
        ...options
    });
};

/**
 * Query order quantity precision per asset (USER_DATA)
 * Query for supported asset precision information
 *
 * Weight(IP): 100
 */
export const getSapiV1ConvertAssetInfo = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ConvertAssetInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ConvertAssetInfoResponse, GetSapiV1ConvertAssetInfoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/convert/assetInfo',
        ...options
    });
};

/**
 * Send quote request (USER_DATA)
 * Request a quote for the requested token pairs
 *
 * Weight(UID): 200
 */
export const postSapiV1ConvertGetQuote = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1ConvertGetQuoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1ConvertGetQuoteResponse, PostSapiV1ConvertGetQuoteError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/convert/getQuote',
        ...options
    });
};

/**
 * Accept Quote (TRADE)
 * Accept the offered quote by quote ID.
 *
 * Weight(UID): 500
 */
export const postSapiV1ConvertAcceptQuote = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1ConvertAcceptQuoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1ConvertAcceptQuoteResponse, PostSapiV1ConvertAcceptQuoteError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/convert/acceptQuote',
        ...options
    });
};

/**
 * Order status (USER_DATA)
 * Query order status by order ID.
 *
 * Weight(UID): 100
 */
export const getSapiV1ConvertOrderStatus = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ConvertOrderStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ConvertOrderStatusResponse, GetSapiV1ConvertOrderStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/convert/orderStatus',
        ...options
    });
};

/**
 * Place limit order (USER_DATA)
 * Enable users to place a limit order
 *
 * - baseAsset or quoteAsset can be determined via exchangeInfo endpoint.
 * - Limit price is defined from baseAsset to quoteAsset.
 * - Either baseAmount or quoteAmount is used.
 *
 * Weight(UID): 500
 */
export const postSapiV1ConvertLimitPlaceOrder = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1ConvertLimitPlaceOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1ConvertLimitPlaceOrderResponse, PostSapiV1ConvertLimitPlaceOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/convert/limit/placeOrder',
        ...options
    });
};

/**
 * Cancel limit order (USER_DATA)
 * Enable users to cancel a limit order
 *
 * Weight(UID): 200
 */
export const postSapiV1ConvertLimitCancelOrder = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1ConvertLimitCancelOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1ConvertLimitCancelOrderResponse, PostSapiV1ConvertLimitCancelOrderError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/convert/limit/cancelOrder',
        ...options
    });
};

/**
 * Query limit open orders (USER_DATA)
 * Enable users to query for all existing limit orders
 *
 * Weight(UID): 3000
 */
export const getSapiV1ConvertLimitQueryOpenOrders = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ConvertLimitQueryOpenOrdersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ConvertLimitQueryOpenOrdersResponse, GetSapiV1ConvertLimitQueryOpenOrdersError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/convert/limit/queryOpenOrders',
        ...options
    });
};

/**
 * Get Convert Trade History (USER_DATA)
 * - The max interval between startTime and endTime is 30 days.
 *
 * Weight(UID): 3000
 */
export const getSapiV1ConvertTradeFlow = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1ConvertTradeFlowData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1ConvertTradeFlowResponse, GetSapiV1ConvertTradeFlowError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/convert/tradeFlow',
        ...options
    });
};

/**
 * Get Spot Rebate History Records (USER_DATA)
 * - The max interval between startTime and endTime is 90 days.
 * - If startTime and endTime are not sent, the recent 7 days' data will be returned.
 * - The earliest startTime is supported on June 10, 2020
 *
 * Weight(UID): 3000
 */
export const getSapiV1RebateTaxQuery = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1RebateTaxQueryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1RebateTaxQueryResponse, GetSapiV1RebateTaxQueryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/rebate/taxQuery',
        ...options
    });
};

/**
 * Get NFT Transaction History (USER_DATA)
 * - The max interval between startTime and endTime is 90 days.
 * - If startTime and endTime are not sent, the recent 7 days' data will be returned.
 *
 * Weight(UID): 3000
 */
export const getSapiV1NftHistoryTransactions = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1NftHistoryTransactionsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1NftHistoryTransactionsResponse, GetSapiV1NftHistoryTransactionsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/nft/history/transactions',
        ...options
    });
};

/**
 * Get NFT Deposit History(USER_DATA)
 * - The max interval between startTime and endTime is 90 days.
 * - If startTime and endTime are not sent, the recent 7 days' data will be returned.
 *
 * Weight(UID): 3000
 */
export const getSapiV1NftHistoryDeposit = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1NftHistoryDepositData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1NftHistoryDepositResponse, GetSapiV1NftHistoryDepositError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/nft/history/deposit',
        ...options
    });
};

/**
 * Get NFT Withdraw History (USER_DATA)
 * - The max interval between startTime and endTime is 90 days.
 * - If startTime and endTime are not sent, the recent 7 days' data will be returned.
 *
 * Weight(UID): 3000
 */
export const getSapiV1NftHistoryWithdraw = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1NftHistoryWithdrawData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1NftHistoryWithdrawResponse, GetSapiV1NftHistoryWithdrawError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/nft/history/withdraw',
        ...options
    });
};

/**
 * Get NFT Asset (USER_DATA)
 * Weight(UID): 3000
 */
export const getSapiV1NftUserGetAsset = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1NftUserGetAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1NftUserGetAssetResponse, GetSapiV1NftUserGetAssetError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/nft/user/getAsset',
        ...options
    });
};

/**
 * Create a Binance Code (USER_DATA)
 * This API is for creating a Binance Code. To get started with, please make sure:
 *
 * - You have a Binance account
 * - You have passed kyc
 * - You have a sufficient balance in your Binance funding wallet
 * - You need Enable Withdrawals for the API Key which requests this endpoint.
 *
 * Daily creation volume: 2 BTC / 24H Daily creation times: 200 Codes / 24H
 *
 * Weight(IP): 1
 */
export const postSapiV1GiftcardCreateCode = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1GiftcardCreateCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1GiftcardCreateCodeResponse, PostSapiV1GiftcardCreateCodeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/giftcard/createCode',
        ...options
    });
};

/**
 * Redeem a Binance Code (USER_DATA)
 * This API is for redeeming the Binance Code. Once redeemed, the coins will be deposited in your funding wallet.
 *
 * Please note that if you enter the wrong code 5 times within 24 hours, you will no longer be able to redeem any Binance Code that day.
 *
 * Weight(IP): 1
 */
export const postSapiV1GiftcardRedeemCode = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1GiftcardRedeemCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1GiftcardRedeemCodeResponse, PostSapiV1GiftcardRedeemCodeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/giftcard/redeemCode',
        ...options
    });
};

/**
 * Verify a Binance Code (USER_DATA)
 * This API is for verifying whether the Binance Code is valid or not by entering Binance Code or reference number.
 *
 * Please note that if you enter the wrong binance code 5 times within an hour, you will no longer be able to verify any binance code for that hour.
 *
 * Weight(IP): 1
 */
export const getSapiV1GiftcardVerify = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1GiftcardVerifyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1GiftcardVerifyResponse, GetSapiV1GiftcardVerifyError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/giftcard/verify',
        ...options
    });
};

/**
 * Fetch RSA Public Key (USER_DATA)
 * This API is for fetching the RSA Public Key.
 * This RSA Public key will be used to encrypt the card code.
 * Please note that the RSA Public key fetched is valid only for the current day.
 *
 * Weight(IP): 1
 */
export const getSapiV1GiftcardCryptographyRsaPublicKey = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1GiftcardCryptographyRsaPublicKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1GiftcardCryptographyRsaPublicKeyResponse, GetSapiV1GiftcardCryptographyRsaPublicKeyError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/giftcard/cryptography/rsa-public-key',
        ...options
    });
};

/**
 * Buy a Binance Code (TRADE)
 * This API is for buying a fixed-value Binance Code, which means your Binance Code will be redeemable to a token that is different to the token that you are paying in. If the token you’re paying and the redeemable token are the same, please use the Create Binance Code endpoint.
 * You can use supported crypto currency or fiat token as baseToken to buy Binance Code that is redeemable to your chosen faceToken.
 * Once successfully purchased, the amount of baseToken would be deducted from your funding wallet.
 *
 * To get started with, please make sure:
 * - You have a Binance account
 * - You have passed kyc
 * - You have a sufficient balance in your Binance funding wallet
 * - You need Enable Withdrawals for the API Key which requests this endpoint.
 *
 * Daily creation volume: 2 BTC / 24H Daily creation times: 200 Codes / 24H
 *
 * Weight(IP): 1
 */
export const postSapiV1GiftcardBuyCode = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1GiftcardBuyCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1GiftcardBuyCodeResponse, PostSapiV1GiftcardBuyCodeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/giftcard/buyCode',
        ...options
    });
};

/**
 * Fetch Token Limit (USER_DATA)
 * This API is to help you verify which tokens are available for you to purchase fixed-value gift cards as mentioned in section 2 and it's limitation.
 *
 * Weight(IP): 1
 */
export const getSapiV1GiftcardBuyCodeTokenLimit = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1GiftcardBuyCodeTokenLimitData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1GiftcardBuyCodeTokenLimitResponse, GetSapiV1GiftcardBuyCodeTokenLimitError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/giftcard/buyCode/token-limit',
        ...options
    });
};

/**
 * Get target asset list (USER_DATA)
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestTargetAssetList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestTargetAssetListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestTargetAssetListResponse, GetSapiV1LendingAutoInvestTargetAssetListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/target-asset/list',
        ...options
    });
};

/**
 * Get target asset ROI data (USER_DATA)
 * ROI return list for target asset
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestTargetAssetRoiList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestTargetAssetRoiListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestTargetAssetRoiListResponse, GetSapiV1LendingAutoInvestTargetAssetRoiListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/target-asset/roi/list',
        ...options
    });
};

/**
 * Query all source asset and target asset (USER_DATA)
 * Query all source assets and target assets
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestAllAsset = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestAllAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestAllAssetResponse, GetSapiV1LendingAutoInvestAllAssetError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/all/asset',
        ...options
    });
};

/**
 * Query source asset list (USER_DATA)
 * Query Source Asset to be used for investment
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestSourceAssetList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestSourceAssetListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestSourceAssetListResponse, GetSapiV1LendingAutoInvestSourceAssetListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/source-asset/list',
        ...options
    });
};

/**
 * Investment plan creation (USER_DATA)
 * Post an investment plan creation
 *
 * Weight(IP): 1
 */
export const postSapiV1LendingAutoInvestPlanAdd = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LendingAutoInvestPlanAddData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LendingAutoInvestPlanAddResponse, PostSapiV1LendingAutoInvestPlanAddError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/plan/add',
        ...options
    });
};

/**
 * Investment plan adjustment
 * Query Source Asset to be used for investment
 *
 * Weight(IP): 1
 */
export const postSapiV1LendingAutoInvestPlanEdit = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LendingAutoInvestPlanEditData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LendingAutoInvestPlanEditResponse, PostSapiV1LendingAutoInvestPlanEditError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/plan/edit',
        ...options
    });
};

/**
 * Change Plan Status
 * Change Plan Status
 *
 * Weight(IP): 1
 */
export const postSapiV1LendingAutoInvestPlanEditStatus = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LendingAutoInvestPlanEditStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LendingAutoInvestPlanEditStatusResponse, PostSapiV1LendingAutoInvestPlanEditStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/plan/edit-status',
        ...options
    });
};

/**
 * Get list of plans
 * Query plan lists
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestPlanList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestPlanListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestPlanListResponse, GetSapiV1LendingAutoInvestPlanListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/plan/list',
        ...options
    });
};

/**
 * Query holding details of the plan
 * Query holding details of the plan
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestPlanId = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestPlanIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestPlanIdResponse, GetSapiV1LendingAutoInvestPlanIdError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/plan/id',
        ...options
    });
};

/**
 * Query subscription transaction history
 * Query subscription transaction history of a plan
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestHistoryList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestHistoryListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestHistoryListResponse, GetSapiV1LendingAutoInvestHistoryListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/history/list',
        ...options
    });
};

/**
 * Query Index Details(USER_DATA)
 * Query index details
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestIndexInfo = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestIndexInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestIndexInfoResponse, GetSapiV1LendingAutoInvestIndexInfoError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/index/info',
        ...options
    });
};

/**
 * Query Index Linked Plan Position Details(USER_DATA)
 * Details on users Index-Linked plan position details
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestIndexUserSummary = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestIndexUserSummaryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestIndexUserSummaryResponse, GetSapiV1LendingAutoInvestIndexUserSummaryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/index/user-summary',
        ...options
    });
};

/**
 * One Time Transaction(TRADE)
 * One time transaction
 *
 * Weight(IP): 1
 */
export const postSapiV1LendingAutoInvestOneOff = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LendingAutoInvestOneOffData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LendingAutoInvestOneOffResponse, PostSapiV1LendingAutoInvestOneOffError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/one-off',
        ...options
    });
};

/**
 * Query One-Time Transaction Status (USER_DATA)
 * Transaction status for one-time transaction
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestOneOffStatus = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestOneOffStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestOneOffStatusResponse, GetSapiV1LendingAutoInvestOneOffStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/one-off/status',
        ...options
    });
};

/**
 * Index Linked Plan Redemption (TRADE)
 * To redeem index-Linked plan holdings
 *
 * Weight(IP): 1
 */
export const postSapiV1LendingAutoInvestRedeem = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1LendingAutoInvestRedeemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1LendingAutoInvestRedeemResponse, PostSapiV1LendingAutoInvestRedeemError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/redeem',
        ...options
    });
};

/**
 * Index Linked Plan Redemption History (USER_DATA)
 * Get the history of Index Linked Plan Redemption transactions
 *
 * Max 30 day difference between startTime and endTime
 * If no startTime and endTime, default to show past 30 day records
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestRedeemHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestRedeemHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestRedeemHistoryResponse, GetSapiV1LendingAutoInvestRedeemHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/redeem/history',
        ...options
    });
};

/**
 * Index Linked Plan Rebalance Details (USER_DATA)
 * Get the history of Index Linked Plan Redemption transactions
 *
 * Max 30 day difference between startTime and endTime
 * If no startTime and endTime, default to show past 30 day records
 *
 * Weight(IP): 1
 */
export const getSapiV1LendingAutoInvestRebalanceHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1LendingAutoInvestRebalanceHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1LendingAutoInvestRebalanceHistoryResponse, GetSapiV1LendingAutoInvestRebalanceHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/lending/auto-invest/rebalance/history',
        ...options
    });
};

/**
 * Subscribe ETH Staking V2(TRADE)
 * Stake ETH to get WBETH
 *
 * - You need to open Enable Spot & Margin Trading permission for the API Key which requests this endpoint.
 *
 * Weight(IP): 150
 */
export const postSapiV2EthStakingEthStake = <ThrowOnError extends boolean = false>(options: Options<PostSapiV2EthStakingEthStakeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV2EthStakingEthStakeResponse, PostSapiV2EthStakingEthStakeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/eth-staking/eth/stake',
        ...options
    });
};

/**
 * Redeem ETH (TRADE)
 * Redeem WBETH or BETH and get ETH
 *
 * - You need to open Enable Spot & Margin Trading permission for the API Key which requests this endpoint.
 *
 * Weight(IP): 150
 */
export const postSapiV1EthStakingEthRedeem = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1EthStakingEthRedeemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1EthStakingEthRedeemResponse, PostSapiV1EthStakingEthRedeemError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/eth/redeem',
        ...options
    });
};

/**
 * Get ETH staking history (USER_DATA)
 * - The time between startTime and endTime cannot be longer than 3 months.
 * - If startTime and endTime are both not sent, then the last 30 days' data will be returned.
 * - If startTime is sent but endTime is not sent, the next 30 days' data beginning from startTime will be returned.
 * - If endTime is sent but startTime is not sent, the 30 days' data before endTime will be returned.
 *
 * Weight(IP): 150
 */
export const getSapiV1EthStakingEthHistoryStakingHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1EthStakingEthHistoryStakingHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1EthStakingEthHistoryStakingHistoryResponse, GetSapiV1EthStakingEthHistoryStakingHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/eth/history/stakingHistory',
        ...options
    });
};

/**
 * Get ETH redemption history (USER_DATA)
 * - The time between startTime and endTime cannot be longer than 3 months.
 * - If startTime and endTime are both not sent, then the last 30 days' data will be returned.
 * - If startTime is sent but endTime is not sent, the next 30 days' data beginning from startTime will be returned.
 * - If endTime is sent but startTime is not sent, the 30 days' data before endTime will be returned.
 *
 * Weight(IP): 150
 */
export const getSapiV1EthStakingEthHistoryRedemptionHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1EthStakingEthHistoryRedemptionHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1EthStakingEthHistoryRedemptionHistoryResponse, GetSapiV1EthStakingEthHistoryRedemptionHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/eth/history/redemptionHistory',
        ...options
    });
};

/**
 * Get BETH rewards distribution history(USER_DATA)
 * - The time between startTime and endTime cannot be longer than 3 months.
 * - If startTime and endTime are both not sent, then the last 30 days' data will be returned.
 * - If startTime is sent but endTime is not sent, the next 30 days' data beginning from startTime will be returned.
 * - If endTime is sent but startTime is not sent, the 30 days' data before endTime will be returned.
 *
 * Weight(IP): 150
 */
export const getSapiV1EthStakingEthHistoryRewardsHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1EthStakingEthHistoryRewardsHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1EthStakingEthHistoryRewardsHistoryResponse, GetSapiV1EthStakingEthHistoryRewardsHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/eth/history/rewardsHistory',
        ...options
    });
};

/**
 * Get current ETH staking quota (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1EthStakingEthQuota = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1EthStakingEthQuotaData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1EthStakingEthQuotaResponse, GetSapiV1EthStakingEthQuotaError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/eth/quota',
        ...options
    });
};

/**
 * Get WBETH Rate History (USER_DATA)
 * - The time between startTime and endTime cannot be longer than 3 months.
 * - If startTime and endTime are both not sent, then the last 30 days' data will be returned.
 * - If startTime is sent but endTime is not sent, the next 30 days' data beginning from startTime will be returned.
 * - If endTime is sent but startTime is not sent, the 30 days' data before endTime will be returned.
 *
 * Weight(IP): 150
 */
export const getSapiV1EthStakingEthHistoryRateHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1EthStakingEthHistoryRateHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1EthStakingEthHistoryRateHistoryResponse, GetSapiV1EthStakingEthHistoryRateHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/eth/history/rateHistory',
        ...options
    });
};

/**
 * ETH Staking account V2(USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV2EthStakingAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV2EthStakingAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV2EthStakingAccountResponse, GetSapiV2EthStakingAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v2/eth-staking/account',
        ...options
    });
};

/**
 * Wrap BETH(TRADE)
 * - You need to open Enable Spot & Margin Trading permission for the API Key which requests this endpoint.
 *
 * Weight(IP): 150
 */
export const postSapiV1EthStakingWbethWrap = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1EthStakingWbethWrapData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1EthStakingWbethWrapResponse, PostSapiV1EthStakingWbethWrapError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/wbeth/wrap',
        ...options
    });
};

/**
 * Get WBETH wrap history (USER_DATA)
 * - The time between startTime and endTime cannot be longer than 3 months.
 * - If startTime and endTime are both not sent, then the last 30 days' data will be returned.
 * - If startTime is sent but endTime is not sent, the next 30 days' data beginning from startTime will be returned.
 * - If endTime is sent but startTime is not sent, the 30 days' data before endTime will be returned.
 *
 * Weight(IP): 150
 */
export const getSapiV1EthStakingWbethHistoryWrapHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1EthStakingWbethHistoryWrapHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1EthStakingWbethHistoryWrapHistoryResponse, GetSapiV1EthStakingWbethHistoryWrapHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/wbeth/history/wrapHistory',
        ...options
    });
};

/**
 * Get WBETH unwrap history (USER_DATA)
 * - The time between startTime and endTime cannot be longer than 3 months.
 * - If startTime and endTime are both not sent, then the last 30 days' data will be returned.
 * - If startTime is sent but endTime is not sent, the next 30 days' data beginning from startTime will be returned.
 * - If endTime is sent but startTime is not sent, the 30 days' data before endTime will be returned.
 *
 * Weight(IP): 150
 */
export const getSapiV1EthStakingWbethHistoryUnwrapHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1EthStakingWbethHistoryUnwrapHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1EthStakingWbethHistoryUnwrapHistoryResponse, GetSapiV1EthStakingWbethHistoryUnwrapHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/wbeth/history/unwrapHistory',
        ...options
    });
};

/**
 * Get WBETH rewards history(USER_DATA)
 * - The time between startTime and endTime cannot be longer than 3 months.
 * - If startTime and endTime are both not sent, then the last 30 days' data will be returned.
 * - If startTime is sent but endTime is not sent, the next 30 days' data beginning from startTime will be returned.
 * - If endTime is sent but startTime is not sent, the 30 days' data before endTime will be returned.
 *
 * Weight(IP): 150
 */
export const getSapiV1EthStakingEthHistoryWbethRewardsHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1EthStakingEthHistoryWbethRewardsHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1EthStakingEthHistoryWbethRewardsHistoryResponse, GetSapiV1EthStakingEthHistoryWbethRewardsHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/eth-staking/eth/history/wbethRewardsHistory',
        ...options
    });
};

/**
 * Get Futures Lead Trader Status(TRADE)
 * Get Futures Lead Trader Status
 *
 * Weight(UID): 20
 */
export const getSapiV1CopyTradingFuturesUserStatus = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CopyTradingFuturesUserStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CopyTradingFuturesUserStatusResponse, GetSapiV1CopyTradingFuturesUserStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/copyTrading/futures/userStatus',
        ...options
    });
};

/**
 * Get Futures Lead Trading Symbol Whitelist(USER_DATA)
 * Get Futures Lead Trading Symbol Whitelist
 *
 * Weight(IP): 20
 */
export const getSapiV1CopyTradingFuturesLeadSymbol = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1CopyTradingFuturesLeadSymbolData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1CopyTradingFuturesLeadSymbolResponse, GetSapiV1CopyTradingFuturesLeadSymbolError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/copyTrading/futures/leadSymbol',
        ...options
    });
};

/**
 * Get Simple Earn Flexible Product List (USER_DATA)
 * Get available Simple Earn flexible product list
 *
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexibleList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnFlexibleListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexibleListResponse, GetSapiV1SimpleEarnFlexibleListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/list',
        ...options
    });
};

/**
 * Get Simple Earn Locked Product List (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnLockedList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnLockedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnLockedListResponse, GetSapiV1SimpleEarnLockedListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/list',
        ...options
    });
};

/**
 * Subscribe Flexible Product (TRADE)
 * Weight(IP): 1
 *
 * Rate Limit: 1/3s per account
 */
export const postSapiV1SimpleEarnFlexibleSubscribe = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SimpleEarnFlexibleSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SimpleEarnFlexibleSubscribeResponse, PostSapiV1SimpleEarnFlexibleSubscribeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/subscribe',
        ...options
    });
};

/**
 * Subscribe Locked Product (TRADE)
 * Weight(IP): 1
 *
 * Rate Limit: 1/3s per account
 */
export const postSapiV1SimpleEarnLockedSubscribe = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SimpleEarnLockedSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SimpleEarnLockedSubscribeResponse, PostSapiV1SimpleEarnLockedSubscribeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/subscribe',
        ...options
    });
};

/**
 * Redeem Flexible Product (TRADE)
 * Weight(IP): 1
 *
 * Rate Limit: 1/3s per account
 */
export const postSapiV1SimpleEarnFlexibleRedeem = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SimpleEarnFlexibleRedeemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SimpleEarnFlexibleRedeemResponse, PostSapiV1SimpleEarnFlexibleRedeemError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/redeem',
        ...options
    });
};

/**
 * Redeem Locked Product (TRADE)
 * Weight(IP): 1
 *
 * Rate Limit: 1/3s per account
 */
export const postSapiV1SimpleEarnLockedRedeem = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SimpleEarnLockedRedeemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SimpleEarnLockedRedeemResponse, PostSapiV1SimpleEarnLockedRedeemError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/redeem',
        ...options
    });
};

/**
 * Get Flexible Product Position (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexiblePosition = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnFlexiblePositionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexiblePositionResponse, GetSapiV1SimpleEarnFlexiblePositionError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/position',
        ...options
    });
};

/**
 * Get Locked Product Position (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnLockedPosition = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnLockedPositionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnLockedPositionResponse, GetSapiV1SimpleEarnLockedPositionError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/position',
        ...options
    });
};

/**
 * Simple Account (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnAccount = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnAccountResponse, GetSapiV1SimpleEarnAccountError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/account',
        ...options
    });
};

/**
 * Get Flexible Subscription Record (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexibleHistorySubscriptionRecord = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnFlexibleHistorySubscriptionRecordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexibleHistorySubscriptionRecordResponse, GetSapiV1SimpleEarnFlexibleHistorySubscriptionRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/history/subscriptionRecord',
        ...options
    });
};

/**
 * Get Locked Subscription Record (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnLockedHistorySubscriptionRecord = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnLockedHistorySubscriptionRecordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnLockedHistorySubscriptionRecordResponse, GetSapiV1SimpleEarnLockedHistorySubscriptionRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/history/subscriptionRecord',
        ...options
    });
};

/**
 * Get Flexible Redemption Record (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexibleHistoryRedemptionRecord = <ThrowOnError extends boolean = false>(options?: Options<GetSapiV1SimpleEarnFlexibleHistoryRedemptionRecordData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexibleHistoryRedemptionRecordResponse, GetSapiV1SimpleEarnFlexibleHistoryRedemptionRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/history/redemptionRecord',
        ...options
    });
};

/**
 * Get Locked Redemption Record (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnLockedHistoryRedemptionRecord = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnLockedHistoryRedemptionRecordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnLockedHistoryRedemptionRecordResponse, GetSapiV1SimpleEarnLockedHistoryRedemptionRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/history/redemptionRecord',
        ...options
    });
};

/**
 * Get Flexible Rewards History (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexibleHistoryRewardsRecord = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnFlexibleHistoryRewardsRecordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexibleHistoryRewardsRecordResponse, GetSapiV1SimpleEarnFlexibleHistoryRewardsRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/history/rewardsRecord',
        ...options
    });
};

/**
 * Get Locked Rewards History (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnLockedHistoryRewardsRecord = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnLockedHistoryRewardsRecordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnLockedHistoryRewardsRecordResponse, GetSapiV1SimpleEarnLockedHistoryRewardsRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/history/rewardsRecord',
        ...options
    });
};

/**
 * Set Flexible Auto Subscribe (USER_DATA)
 * Weight(IP): 150
 */
export const postSapiV1SimpleEarnFlexibleSetAutoSubscribe = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SimpleEarnFlexibleSetAutoSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SimpleEarnFlexibleSetAutoSubscribeResponse, PostSapiV1SimpleEarnFlexibleSetAutoSubscribeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/setAutoSubscribe',
        ...options
    });
};

/**
 * Set Locked Auto Subscribe (USER_DATA)
 * Weight(IP): 150
 */
export const postSapiV1SimpleEarnLockedSetAutoSubscribe = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1SimpleEarnLockedSetAutoSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1SimpleEarnLockedSetAutoSubscribeResponse, PostSapiV1SimpleEarnLockedSetAutoSubscribeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/setAutoSubscribe',
        ...options
    });
};

/**
 * Get Flexible Personal Left Quota (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexiblePersonalLeftQuota = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnFlexiblePersonalLeftQuotaData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexiblePersonalLeftQuotaResponse, GetSapiV1SimpleEarnFlexiblePersonalLeftQuotaError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/personalLeftQuota',
        ...options
    });
};

/**
 * Get Locked Personal Left Quota (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnLockedPersonalLeftQuota = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnLockedPersonalLeftQuotaData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnLockedPersonalLeftQuotaResponse, GetSapiV1SimpleEarnLockedPersonalLeftQuotaError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/personalLeftQuota',
        ...options
    });
};

/**
 * Get Flexible Subscription Preview (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexibleSubscriptionPreview = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnFlexibleSubscriptionPreviewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexibleSubscriptionPreviewResponse, GetSapiV1SimpleEarnFlexibleSubscriptionPreviewError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/subscriptionPreview',
        ...options
    });
};

/**
 * Get Locked Subscription Preview (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnLockedSubscriptionPreview = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnLockedSubscriptionPreviewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnLockedSubscriptionPreviewResponse, GetSapiV1SimpleEarnLockedSubscriptionPreviewError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/subscriptionPreview',
        ...options
    });
};

/**
 * Set Locked Product Redeem Option(USER_DATA)
 * Set redeem option for Locked product
 *
 * Weight(IP): 50
 */
export const getSapiV1SimpleEarnLockedSetRedeemOption = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnLockedSetRedeemOptionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnLockedSetRedeemOptionResponse, GetSapiV1SimpleEarnLockedSetRedeemOptionError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/locked/setRedeemOption',
        ...options
    });
};

/**
 * Get Rate History (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexibleHistoryRateHistory = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnFlexibleHistoryRateHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexibleHistoryRateHistoryResponse, GetSapiV1SimpleEarnFlexibleHistoryRateHistoryError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/history/rateHistory',
        ...options
    });
};

/**
 * Get Collateral Record (USER_DATA)
 * Weight(IP): 150
 */
export const getSapiV1SimpleEarnFlexibleHistoryCollateralRecord = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1SimpleEarnFlexibleHistoryCollateralRecordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1SimpleEarnFlexibleHistoryCollateralRecordResponse, GetSapiV1SimpleEarnFlexibleHistoryCollateralRecordError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/simple-earn/flexible/history/collateralRecord',
        ...options
    });
};

/**
 * Get Dual Investment product list(USER_DATA)
 * Get Dual Investment product list
 *
 * Weight(IP): 1
 */
export const getSapiV1DciProductList = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1DciProductListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1DciProductListResponse, GetSapiV1DciProductListError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/dci/product/list',
        ...options
    });
};

/**
 * Subscribe Dual Investment products(USER_DATA)
 * Subscribe Dual Investment products
 *
 * - `Products are not available.` means that the APR changes to lower value, or the orders are not available.
 * - `Failed` is a system or network errors.
 *
 * Weight(IP): 1
 */
export const postSapiV1DciProductSubscribe = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1DciProductSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1DciProductSubscribeResponse, PostSapiV1DciProductSubscribeError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/dci/product/subscribe',
        ...options
    });
};

/**
 * Get Dual Investment positions(USER_DATA)
 * Get Dual Investment positions (batch)
 *
 * Weight(IP): 1
 */
export const getSapiV1DciProductPositions = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1DciProductPositionsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1DciProductPositionsResponse, GetSapiV1DciProductPositionsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/dci/product/positions',
        ...options
    });
};

/**
 * Check Dual Investment accounts(USER_DATA)
 * Check Dual Investment accounts
 *
 * Weight(IP): 1
 */
export const getSapiV1DciProductAccounts = <ThrowOnError extends boolean = false>(options: Options<GetSapiV1DciProductAccountsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSapiV1DciProductAccountsResponse, GetSapiV1DciProductAccountsError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/dci/product/accounts',
        ...options
    });
};

/**
 * Change Auto-Compound status(USER_DATA)
 * Change Auto-Compound status
 *
 * - 15:31 ~ 16:00 UTC+8 This function is disabled
 *
 * Weight(IP): 1
 *
 * Rate Limit: Maximum 1 time/s per account
 */
export const postSapiV1DciProductAutoCompoundEditStatus = <ThrowOnError extends boolean = false>(options: Options<PostSapiV1DciProductAutoCompoundEditStatusData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSapiV1DciProductAutoCompoundEditStatusResponse, PostSapiV1DciProductAutoCompoundEditStatusError, ThrowOnError>({
        security: [
            {
                name: 'X-MBX-APIKEY',
                type: 'apiKey'
            }
        ],
        url: '/sapi/v1/dci/product/auto_compound/edit-status',
        ...options
    });
};